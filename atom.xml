<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孙继红</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-13T02:45:07.641Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Almighty Father</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>直播</title>
    <link href="http://yoursite.com/2018/03/13/live/"/>
    <id>http://yoursite.com/2018/03/13/live/</id>
    <published>2018-03-13T02:41:46.455Z</published>
    <updated>2018-03-13T02:45:07.641Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000011346597" target="_blank" rel="noopener">参考文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011346597&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考文档&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="video" scheme="http://yoursite.com/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>mongodb 入门</title>
    <link href="http://yoursite.com/2018/03/12/mongodb/"/>
    <id>http://yoursite.com/2018/03/12/mongodb/</id>
    <published>2018-03-12T01:21:06.001Z</published>
    <updated>2018-03-14T06:59:19.511Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.runoob.com/mongodb/mongodb-window-install.html" target="_blank" rel="noopener">windows 安装mongodb</a></p><p><a href="http://www.nodeclass.com/api/mongoose.html" target="_blank" rel="noopener">mongoose 文档</a></p><h3 id="链接数据库"><a href="#链接数据库" class="headerlink" title="链接数据库"></a>链接数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var mongoose = require(<span class="string">'mongoose'</span>);</span><br><span class="line"></span><br><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/totoro'</span>)     //连接本地数据库totoro</span><br><span class="line"></span><br><span class="line">var db = mongoose.connection;</span><br><span class="line"></span><br><span class="line">module.exports = db;</span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var mongoose = require(<span class="string">'mongoose'</span>);</span><br><span class="line">var Schema = mongoose.Schema;</span><br><span class="line">var userSchema = new Schema(&#123;</span><br><span class="line">    username: &#123;</span><br><span class="line">        <span class="built_in">type</span>: String,</span><br><span class="line">        unique: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    password: &#123;</span><br><span class="line">        <span class="built_in">type</span>: String</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 将数据模型暴露出去</span><br><span class="line">module.exports = mongoose.model(<span class="string">'users'</span>, userSchema);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.runoob.com/mongodb/mongodb-window-install.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;windows 安装mongodb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="server" scheme="http://yoursite.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>socket 入门</title>
    <link href="http://yoursite.com/2018/03/09/socket/"/>
    <id>http://yoursite.com/2018/03/09/socket/</id>
    <published>2018-03-09T03:17:58.095Z</published>
    <updated>2018-03-09T10:13:07.808Z</updated>
    
    <content type="html"><![CDATA[<h1 id="聊天功能实现"><a href="#聊天功能实现" class="headerlink" title="聊天功能实现"></a>聊天功能实现</h1><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var express = require(<span class="string">'express'</span>)</span><br><span class="line">var app = express()</span><br><span class="line">var server = require(<span class="string">'http'</span>).Server(app)</span><br><span class="line">var io = require(<span class="string">'socket.io'</span>)(server, &#123;</span><br><span class="line">    pingInterval: 1000</span><br><span class="line">&#125;)</span><br><span class="line">$ 一个简易聊天室</span><br><span class="line">io.on(<span class="string">'connection'</span>, <span class="keyword">function</span>(socket) &#123;</span><br><span class="line">    socket.on(<span class="string">'content'</span>, <span class="keyword">function</span> (data) &#123;</span><br><span class="line">        console.log(data)</span><br><span class="line">        socket.broadcast.emit(<span class="string">'news'</span>, &#123;hello: data&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="keyword">function</span>(req, res)&#123;</span><br><span class="line">    res.sendFile(__dirname+<span class="string">'/index.html'</span>)</span><br><span class="line">&#125;)</span><br><span class="line">server.listen(18080, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    console.log(<span class="string">'服务器在18080端口启动'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="client"><a href="#client" class="headerlink" title="client"></a>client</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const socket = io.connect(<span class="string">'http://192.168.1.177:18080'</span>)</span><br><span class="line">socket.on(<span class="string">'news'</span>, <span class="keyword">function</span> (data) &#123;</span><br><span class="line">            console.log(data)</span><br><span class="line">        &#125;)</span><br><span class="line">        socket.emit(<span class="string">'content'</span>, &#123;content: value&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;聊天功能实现&quot;&gt;&lt;a href=&quot;#聊天功能实现&quot; class=&quot;headerlink&quot; title=&quot;聊天功能实现&quot;&gt;&lt;/a&gt;聊天功能实现&lt;/h1&gt;&lt;h3 id=&quot;server&quot;&gt;&lt;a href=&quot;#server&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="server" scheme="http://yoursite.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>Vue</title>
    <link href="http://yoursite.com/2018/03/09/vue/"/>
    <id>http://yoursite.com/2018/03/09/vue/</id>
    <published>2018-03-09T01:07:31.293Z</published>
    <updated>2018-03-09T01:07:31.295Z</updated>
    
    <content type="html"><![CDATA[<ul><li>双向数据绑定  <code>Object.defineProperty</code></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;双向数据绑定  &lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
      <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>React</title>
    <link href="http://yoursite.com/2018/03/09/hello-world/"/>
    <id>http://yoursite.com/2018/03/09/hello-world/</id>
    <published>2018-03-09T01:07:31.258Z</published>
    <updated>2018-03-09T01:07:31.260Z</updated>
    
    <content type="html"><![CDATA[<p>搭建React自动化开发环境</p><p>package.json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ &#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="string">"main"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">    <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">      <span class="string">"babel-core"</span>: <span class="string">"^6.18.2"</span>,</span><br><span class="line">      <span class="string">"babel-loader"</span>: <span class="string">"^6.2.8"</span>,</span><br><span class="line">      <span class="string">"babel-preset-es2015"</span>: <span class="string">"^6.18.0"</span>,</span><br><span class="line">      <span class="string">"babel-preset-react"</span>: <span class="string">"^6.16.0"</span>,</span><br><span class="line">      <span class="string">"body-parser"</span>: <span class="string">"^1.15.2"</span>,</span><br><span class="line">      <span class="string">"react"</span>: <span class="string">"^15.4.1"</span>,</span><br><span class="line">      <span class="string">"react-dom"</span>: <span class="string">"^15.4.1"</span>,</span><br><span class="line">      <span class="string">"react-redux"</span>: <span class="string">"^4.4.6"</span>,</span><br><span class="line">      <span class="string">"redux"</span>: <span class="string">"^3.6.0"</span>,</span><br><span class="line">      <span class="string">"webpack"</span>: <span class="string">"^1.14.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>webpack.config.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$ const webpack = require(<span class="string">'webpack'</span>);</span><br><span class="line">   module.exports = &#123;</span><br><span class="line">     entry: &#123;</span><br><span class="line">       login: <span class="string">'./dev/login.jsx'</span>,</span><br><span class="line">       register: <span class="string">'./dev/register.jsx'</span>,</span><br><span class="line">       admin: <span class="string">'./dev/admin.jsx'</span></span><br><span class="line">     &#125;,</span><br><span class="line">     output: &#123;</span><br><span class="line">       path: <span class="string">'./static/js/admin/'</span>,</span><br><span class="line">       filename: <span class="string">'[name].js'</span></span><br><span class="line">     &#125;,</span><br><span class="line">     module: &#123;</span><br><span class="line">       loaders: [&#123;</span><br><span class="line">         <span class="built_in">test</span>: /\.js[x]?$/,</span><br><span class="line">         exclude: /node_modules/,</span><br><span class="line">         loader: <span class="string">'babel-loader?presets[]=es2015&amp;presets[]=react'</span></span><br><span class="line">       &#125;]</span><br><span class="line">     &#125;,</span><br><span class="line">     plugins: [</span><br><span class="line">       // new webpack.DefinePlugin(&#123;</span><br><span class="line">       //   <span class="string">'process.env'</span>: &#123;</span><br><span class="line">       //     <span class="string">'NODE_ENV'</span>: JSON.stringify(<span class="string">'production'</span>)</span><br><span class="line">       //   &#125;</span><br><span class="line">       // &#125;),</span><br><span class="line">       // new webpack.optimize.UglifyJsPlugin(&#123;</span><br><span class="line">       //   compress: &#123;</span><br><span class="line">       //     warnings: <span class="literal">true</span></span><br><span class="line">       //   &#125;</span><br><span class="line">       // &#125;)</span><br><span class="line">       // new webpack.SourceMapDevToolPlugin(&#123;</span><br><span class="line">       //   // Match assets just like <span class="keyword">for</span> loaders.</span><br><span class="line">       //   <span class="built_in">test</span>: string | RegExp | Array,</span><br><span class="line">       //   include: string | RegExp | Array,</span><br><span class="line">       //</span><br><span class="line">       //   // `exclude` matches file names, not package names!</span><br><span class="line">       //   exclude: string | RegExp | Array,</span><br><span class="line">       //</span><br><span class="line">       //   // If filename is <span class="built_in">set</span>, output to this file.</span><br><span class="line">       //   // See `sourceMapFileName`.</span><br><span class="line">       //   filename: string,</span><br><span class="line">       //</span><br><span class="line">       //   // This line is appended to the original asset processed. For</span><br><span class="line">       //   // instance <span class="string">'[url]'</span> would get replaced with an url to the</span><br><span class="line">       //   // sourcemap.</span><br><span class="line">       //   append: <span class="literal">false</span> | string,</span><br><span class="line">       //</span><br><span class="line">       //   // See `devtoolModuleFilenameTemplate` <span class="keyword">for</span> specifics.</span><br><span class="line">       //   moduleFilenameTemplate: string,</span><br><span class="line">       //   fallbackModuleFilenameTemplate: string,</span><br><span class="line">       //</span><br><span class="line">       //   module: bool, // If <span class="literal">false</span>, separate sourcemaps aren<span class="string">'t generated.</span></span><br><span class="line"><span class="string">       //   columns: bool, // If false, column mappings are ignored.</span></span><br><span class="line"><span class="string">       //</span></span><br><span class="line"><span class="string">       //   // Use simpler line to line mappings for the matched modules.</span></span><br><span class="line"><span class="string">       //   lineToLine: bool | &#123;test, include, exclude&#125;</span></span><br><span class="line"><span class="string">       // &#125;)</span></span><br><span class="line"><span class="string">     ]</span></span><br><span class="line"><span class="string">   &#125;;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建React自动化开发环境&lt;/p&gt;
&lt;p&gt;package.json&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
      
    
    </summary>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://yoursite.com/2018/03/09/git/"/>
    <id>http://yoursite.com/2018/03/09/git/</id>
    <published>2018-03-09T01:07:31.249Z</published>
    <updated>2018-03-09T01:07:31.251Z</updated>
    
    <content type="html"><![CDATA[<p><code>fatal: The remote end hung up unexpectedly</code>解决办法<br><code>git config --global http.postBuffer 524288000</code><br><code>git config --global https.postBuffer 1048576000</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;fatal: The remote end hung up unexpectedly&lt;/code&gt;解决办法&lt;br&gt;&lt;code&gt;git config --global http.postBuffer 524288000&lt;/code&gt;&lt;br&gt;&lt;code&gt;git co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>es6</title>
    <link href="http://yoursite.com/2018/01/12/es6/"/>
    <id>http://yoursite.com/2018/01/12/es6/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.240Z</updated>
    
    <content type="html"><![CDATA[<h3 id="let-const"><a href="#let-const" class="headerlink" title="let/const"></a>let/const</h3><ul><li>let和var的区别：let声明的变量只有所在的代码块有效</li><li>let没有变量的提升，只能先声明后使用</li><li>const–常量，只可声明，不能改变  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const user=&#123;&#125;;</span><br><span class="line">user.name = <span class="string">'zhangsan'</span></span><br><span class="line">console.log(user.name)</span><br><span class="line">// <span class="string">"zhangsan"</span></span><br><span class="line">//常量user储存的是一个地址，这个地址指向一个对象。</span><br><span class="line">//不可变的只是这个地址，即不能把user指向另一个地址，但对象本身的属性是可变的</span><br></pre></td></tr></table></figure></li></ul><h3 id="变量的声明方法"><a href="#变量的声明方法" class="headerlink" title="变量的声明方法"></a>变量的声明方法</h3><p>es5: <code>var</code> <code>function</code><br>es6: <code>var</code> <code>function</code> <code>let</code> <code>const</code> <code>import</code> <code>class</code></p><h3 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h3><ul><li>es5只有全局作用域和函数作用域没有块及作用域</li><li>let实际是新增块及作用域<h3 id="set-map"><a href="#set-map" class="headerlink" title="set/map"></a>set/map</h3></li></ul><h3 id="函数的Rest参数和扩展"><a href="#函数的Rest参数和扩展" class="headerlink" title="函数的Rest参数和扩展"></a>函数的Rest参数和扩展</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> sum(...m)&#123;</span><br><span class="line"><span class="built_in">let</span> total = 0;</span><br><span class="line"><span class="keyword">for</span>(var i of m)&#123;</span><br><span class="line">total += i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sum(1,3,5,7)</span><br><span class="line"><span class="built_in">let</span> arr1 = [1,2,3]</span><br><span class="line"><span class="built_in">let</span> arr2 = [4,5,6]</span><br><span class="line">arr1.contact(arr2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">let</span> [a, b, c] = <span class="string">'123'</span></span><br><span class="line"><span class="built_in">let</span> arr = [a,b,c]</span><br><span class="line">console.log(arr)</span><br><span class="line">[<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]</span><br></pre></td></tr></table></figure><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> checks = <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line"><span class="built_in">return</span> new Promise(<span class="keyword">function</span>(resolve,reject)&#123;</span><br><span class="line">var a = Math.floor(Math.random()*2)</span><br><span class="line"><span class="keyword">if</span>(a)&#123;</span><br><span class="line">resolve(<span class="string">'success'</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">reject(<span class="string">'error'</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">checks().<span class="keyword">then</span>(res=&gt;console.log(res))</span><br><span class="line">.catch(err=&gt;console.log(err))</span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><ul><li>当返回值有且只有一个时不用写return<br><code>console.log((a)=&gt;console.log(a))</code></li><li>有多步时需要加{}<br><code>console.log((a)=&gt;{console.log(a)})</code><h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> a = <span class="string">'红红'</span></span><br><span class="line">console.log(`<span class="variable">$&#123;a&#125;</span>最帅`)</span><br><span class="line"></span><br><span class="line">* <span class="string">'红红最帅'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;let-const&quot;&gt;&lt;a href=&quot;#let-const&quot; class=&quot;headerlink&quot; title=&quot;let/const&quot;&gt;&lt;/a&gt;let/const&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;let和var的区别：let声明的变量只有所在的代码块有效&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="javascripts" scheme="http://yoursite.com/tags/javascripts/"/>
    
  </entry>
  
  <entry>
    <title>Blog</title>
    <link href="http://yoursite.com/2018/01/12/blog/"/>
    <id>http://yoursite.com/2018/01/12/blog/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.236Z</updated>
    
    <content type="html"><![CDATA[<p>收录一些博客地址</p><h3 id="零零水"><a href="#零零水" class="headerlink" title="零零水"></a>零零水</h3><p><a href="http://my.csdn.net/qq20004604" target="_blank" rel="noopener">http://my.csdn.net/qq20004604</a></p><h3 id="马彦龙"><a href="#马彦龙" class="headerlink" title="马彦龙"></a>马彦龙</h3><p><a href="https://nate-river.github.io/" target="_blank" rel="noopener">https://nate-river.github.io/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;收录一些博客地址&lt;/p&gt;
&lt;h3 id=&quot;零零水&quot;&gt;&lt;a href=&quot;#零零水&quot; class=&quot;headerlink&quot; title=&quot;零零水&quot;&gt;&lt;/a&gt;零零水&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://my.csdn.net/qq20004604&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>css Hack</title>
    <link href="http://yoursite.com/2018/01/12/hack/"/>
    <id>http://yoursite.com/2018/01/12/hack/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.256Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/freshlover/article/details/12132801" target="_blank" rel="noopener">CSDN freshlover的博客专栏</a></p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p> 由于不同的浏览器对css的支持和解析结果不一样，以及css优先级对浏览器解析结果的影响，所以要根据不同的浏览器应用场景来应用不同的css属性</p></blockquote><h3 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h3><blockquote><p> 优雅降级，渐进增强</p></blockquote><h4 id="方法一-条件注释法"><a href="#方法一-条件注释法" class="headerlink" title="方法一  条件注释法"></a>方法一  条件注释法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">只在IE下生效</span><br><span class="line">&lt;!--[<span class="keyword">if</span> IE]&gt;</span><br><span class="line">这段文字只在IE浏览器显示</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line"></span><br><span class="line">只在IE6下生效</span><br><span class="line">&lt;!--[<span class="keyword">if</span> IE 6]&gt;</span><br><span class="line">这段文字只在IE6浏览器显示</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line"></span><br><span class="line">只在IE6以上版本生效</span><br><span class="line">&lt;!--[<span class="keyword">if</span> gte IE 6]&gt;</span><br><span class="line">这段文字只在IE6以上(包括)版本IE浏览器显示</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line"></span><br><span class="line">只在IE8上不生效</span><br><span class="line">&lt;!--[<span class="keyword">if</span> ! IE 8]&gt;</span><br><span class="line">这段文字在非IE8浏览器显示</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line"></span><br><span class="line">非IE浏览器生效</span><br><span class="line">&lt;!--[<span class="keyword">if</span> !IE]&gt;</span><br><span class="line">这段文字只在非IE浏览器显示</span><br><span class="line">&lt;![endif]--&gt;</span><br></pre></td></tr></table></figure><h4 id="方法二-类内属性前缀法"><a href="#方法二-类内属性前缀法" class="headerlink" title="方法二   类内属性前缀法"></a>方法二   类内属性前缀法</h4><ul><li>“-″减号是IE6专有的hack</li><li>“\9″ IE6/IE7/IE8/IE9/IE10都生效</li><li>“\0″ IE8/IE9/IE10都生效，是IE8/9/10的hack</li><li>“\9\0″ 只对IE9/IE10生效，是IE9/10的hack</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ * ie(6~10)(Q)(兼容模式)  ie(6~7)(S)</span><br><span class="line">$ + ie(6~10)(Q)  ie(6~7)(S)</span><br><span class="line">$ - ie6(Q\S)专属</span><br><span class="line">$ _ ie(6~9)(Q)   ie6(S)</span><br><span class="line">$ <span class="comment"># ie(6~10)(Q)  ie(6~7)(S) </span></span><br><span class="line"></span><br><span class="line">$</span><br><span class="line">$</span><br><span class="line">$ !important ie10(Q)  ie(7~10)(S)</span><br></pre></td></tr></table></figure><h4 id="方法三-选择器前缀法"><a href="#方法三-选择器前缀法" class="headerlink" title="方法三  选择器前缀法"></a>方法三  选择器前缀法</h4><p>给选择器加hack前缀</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/freshlover/article/details/12132801&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSDN freshlover的博客专栏&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;原理
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ios中遇到的坑</title>
    <link href="http://yoursite.com/2018/01/12/ios/"/>
    <id>http://yoursite.com/2018/01/12/ios/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.263Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ios10"><a href="#ios10" class="headerlink" title="ios10"></a>ios10</h3><blockquote><p>vue项目在ios10上白屏的问题</p></blockquote><ul><li>打开 <code>build</code> 文件夹</li><li>找到 <code>webpack.prod.conf.js</code>文件</li><li>在<code>UglifyPlugin</code>的定义里添加关于<code>mangle</code>的选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">new UglifyJsPlugin(&#123;</span><br><span class="line">  uglifyOptions: &#123;</span><br><span class="line">    compress: &#123;</span><br><span class="line">      warnings: false</span><br><span class="line">    &#125;,</span><br><span class="line">    mangle: &#123;</span><br><span class="line">      safari10: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  sourceMap: config.build.productionSourceMap,</span><br><span class="line">  parallel: true</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><blockquote><p>vue项目在ios10上swiper插件报错的问题</p></blockquote><p>  这是因为Swiper插件中用到了ES6的语法a = b c，a是b的c次方，而iOS 10的Safari里不认识这样的语法，认为这是一个错误，所以你需要让Swiper经过babel的包装，而缺省状态下babel是不对node_modules里的模块进行编译的</p><ul><li>解决方法是在项目根目录下新建一个文件vue.config.js，在里面添加如下语句：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  chainWebpack: config =&gt; &#123;</span><br><span class="line">    config.rule(&apos;js&apos;).include.add(/node_modules\/(dom7|swiper)\/.*/)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>在ios10,做原生跳H5时候白屏</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">你的表头白名单里要加入gap://ready和file:的权限，整个白名单可以如下这么写</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Security-Policy&quot; c gap://ready file:; style-src &apos;self&apos; &apos;unsafe-inline&apos;; img-src &apos;self&apos; data:; script-src &apos;unsafe-inline&apos; &apos;unsafe-eval&apos;&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ios10&quot;&gt;&lt;a href=&quot;#ios10&quot; class=&quot;headerlink&quot; title=&quot;ios10&quot;&gt;&lt;/a&gt;ios10&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;vue项目在ios10上白屏的问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>android中遇到的坑</title>
    <link href="http://yoursite.com/2018/01/12/android/"/>
    <id>http://yoursite.com/2018/01/12/android/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.219Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vue做单页面应用，在uc浏览器，微信浏览器，oppo等手机出现白屏</p></blockquote><ul><li>不支持es6语法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">static文件夹中的js文件不能出现es6文件</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;vue做单页面应用，在uc浏览器，微信浏览器，oppo等手机出现白屏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不支持es6语法&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
      <category term="android" scheme="http://yoursite.com/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>app-hbuilder</title>
    <link href="http://yoursite.com/2018/01/12/app-hbuilder/"/>
    <id>http://yoursite.com/2018/01/12/app-hbuilder/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.227Z</updated>
    
    <content type="html"><![CDATA[<p>沉浸式状态栏</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1、正常"><a href="#1、正常" class="headerlink" title="1、正常"></a>1、正常</h3><h3 id="2、变色"><a href="#2、变色" class="headerlink" title="2、变色"></a>2、变色</h3><p> 写法：<br> 使用5+API <a href="http://www.html5plus.org/doc/zh_cn/navigator.html#plus.navigator.setStatusBarBackground" target="_blank" rel="noopener">plus.navigator.setStatusBarBackground）</a>。</p><p> 首页配置<br> 首页需要在manifest.json文件中，plus-&gt;launchwebview下添加statusbar节点，并配置background的值（格式为#RRGGBB）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"launchwebview"</span>: &#123;</span><br><span class="line"><span class="string">"status"</span>:&#123;</span><br><span class="line"><span class="string">"background"</span>: <span class="string">"#f65a41"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 若首页为secondwebview，则调整launchwebview为secondwebview即可。</p><p> 终端支持：</p><ul><li>Android5及以上系统支持；</li><li><p>iOS7.0及以上系统支持。</p><p>前景色处理：<br>当背景色调整后，如果调整不当，会造成前景的信号栏文字颜色与背景太相近，看不清前景，此时需要调整前景色。<br>前景色的使用限制更多些，只能设置黑或白，通过plus.navigator.setStatusBarStyle(‘dark’);设前景为黑色，’dark’换成light则前景色变为白色。<br>同时前景色处理在终端支持方面：</p></li><li>Android5只有小米和魅族支持，Android6及以上所有安卓支持；</li><li><p>iOS7及以上支持</p><blockquote><p>高度处理：此时webview高度没有全屏，webview高度+状态栏高度=手机屏幕高度。</p></blockquote></li></ul><h3 id="3、透明（也称沉浸式状态栏）"><a href="#3、透明（也称沉浸式状态栏）" class="headerlink" title="3、透明（也称沉浸式状态栏）"></a>3、透明（也称沉浸式状态栏）</h3><p> 一般会把状态栏变成透明，此时同时会处理成滚动后恢复为纯色title<br>  写法：</p><p>  HBuilder创建的应用默认不使用沉浸式状态栏样式，需要进行如下配置开启：<br>  打开应用的manifest.json文件，切换到代码视图，在plus -&gt; statusbar 下添加immersed节点并设置值为true。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"plus"</span>: &#123;</span><br><span class="line">      <span class="string">"statusbar"</span>: &#123;</span><br><span class="line">          <span class="string">"immersed"</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>  保存后提交App云端打包</p><p>  如果不生效，在distribute节点下的apple和goole两个节点下添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"UIReserveStatusbarOffset"</span>: <span class="literal">true</span>,（apple节点下添加）</span><br><span class="line"><span class="string">"ImmersedStatusbar"</span>: <span class="literal">true</span>,/*设置为沉浸栏模式*/（goole节点下添加）</span><br></pre></td></tr></table></figure><p>  终端支持：</p><ul><li>Android4.4及以上系统支持；</li><li>iOS7.0及以上系统支持。<br>前景色处理：<br>与背景色调整相同，如果背景图颜色不当，会造成前景的信号栏文字颜色与背景太相近，看不清前景，此时需要调整前景色。<br>前景色的使用限制更多些，只能设置黑或白，通过<code>plus.navigator.setStatusBarStyle(&#39;dark&#39;)</code>;设前景为黑色，’dark’换成light则前景色变为白色。<br>同时前景色处理在终端支持方面：</li><li>Android5只有小米和魅族支持，Android6及以上所有安卓支持；</li><li><p>iOS7及以上支持</p><blockquote><p>高度处理：<br>注意，此时webview高度为全屏，状态栏高度为0，也就是webview高度=屏幕高度。<br>状态栏背景透明后前景图标覆盖在webview顶部。<br>尤其注意此时dom里涉及fix定位计算的元素，可能需要重新排高度。<br>在状态栏透明的情况下，转场动画时，webview动画是会通顶的，状态栏那里也会有条线左右移动。</p></blockquote><p>其他注意：<br>沉浸式状态栏不支持动态调整，属于应用级，真机运行不生效，需要提交到云端打包后有效。<br>一个app设置了沉浸式，就意味着里面的每个webview都变成沉浸式。<br>这可能会造成很多页面都需要调整高度，此时有一种方案，就是在webview创建时，允许通过一个参数设置把这个webview的状态条再模拟显示出来，<code>plus.webview.create(&#39;http://m.weibo.cn/u/3196963860&#39;, &#39;test&#39;, {statusbar:{background:&quot;#D4D4D4&quot;}})</code>。这样设置后，webview的高度重新回到状态栏下方，不再顶到屏幕顶部。<br>此api从HBuilder8.1 alpha版起生效。</p></li></ul><h3 id="4、全屏-没有状态栏"><a href="#4、全屏-没有状态栏" class="headerlink" title="4、全屏(没有状态栏)"></a>4、全屏(没有状态栏)</h3><p>  常见使用场景：如果页面是全屏游戏，一般会直接让状态栏消失，也就是页面全屏。webview高度全屏了，状态栏没有了。<br>  写法：<br>  设置应用全屏显示</p><p>  终端支持：<br>  没有终端类型限制</p><blockquote><p>高度处理：与状态栏透明相同，webview高度=屏幕高度，状态栏高度为0且不显示前景内容。需要注意dom元素的调整，注意顶部。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;沉浸式状态栏&lt;/p&gt;
&lt;h2 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h2&gt;&lt;h3 id=&quot;1、正常&quot;&gt;&lt;a href=&quot;#1、正常&quot; class=&quot;headerlink&quot; title=&quot;1、正
      
    
    </summary>
    
    
      <category term="mui" scheme="http://yoursite.com/tags/mui/"/>
    
  </entry>
  
  <entry>
    <title>es7/es8常用方法</title>
    <link href="http://yoursite.com/2018/01/12/es7-8/"/>
    <id>http://yoursite.com/2018/01/12/es7-8/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.247Z</updated>
    
    <content type="html"><![CDATA[<h2 id="es7"><a href="#es7" class="headerlink" title="es7"></a>es7</h2><h3 id="Array-prototype-includes"><a href="#Array-prototype-includes" class="headerlink" title="Array.prototype.includes()"></a><code>Array.prototype.includes()</code></h3><blockquote><p>判断数组中是否存在</p></blockquote><h3 id="求幂运算符（-）"><a href="#求幂运算符（-）" class="headerlink" title="求幂运算符（**）"></a><code>求幂运算符（**）</code></h3><p>基本用法<br><code>3 ** 2           // 9</code><br>效果同：<br><code>Math.pow(3, 2)   // 9</code></p><p>对比下其他语言的指数运算符：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Python: x ** y</span><br><span class="line">CoffeeScript: x ** y</span><br><span class="line">F<span class="comment">#: x ** y</span></span><br><span class="line">Ruby: x ** y</span><br><span class="line">Perl: x ** y</span><br><span class="line">Lua, Basic, MATLAB: x ^ y</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>].includes(<span class="string">'a'</span>)</span><br><span class="line">// <span class="literal">true</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>].includes(<span class="string">'d'</span>)</span><br><span class="line">// <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="es8"><a href="#es8" class="headerlink" title="es8"></a>es8</h2><h3 id="Object-values-Object-entries"><a href="#Object-values-Object-entries" class="headerlink" title="Object.values/Object.entries"></a><code>Object.values/Object.entries</code></h3><blockquote><p>遍历对象</p></blockquote><ul><li><p>在ES8 /ES2017之前，Javascript开发者需要迭代一个对象的自身属性时候不得不用Object.keys，通过迭代且使用obj[key]获取value值返回一个数组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> obj = &#123;a: 1, b: 2, c: 3&#125;</span><br><span class="line">Object.keys(obj).forEach((key, index)=&gt;&#123;</span><br><span class="line">  console.log(key, obj[key])</span><br><span class="line">&#125;)</span><br><span class="line">// a, 1  b, 2   c, 3</span><br></pre></td></tr></table></figure></li><li><p>而使用ES6/ES2015 中for/of稍微好点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> obj = &#123;a: 1, b: 2, c: 3&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">let</span> key of Object.keys(obj)) &#123;</span><br><span class="line">  console.log(key, obj[key])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Object.values返回对象自身可以迭代属性值（values）为数组类型。我们最好使用Array.prototype.forEach迭代它，结合ES6的箭头函数隐形返回值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> obj = &#123;a: 1, b: 2, c: 3&#125;</span><br><span class="line">Object.values(obj).forEach(value=&gt;console.log(value))</span><br><span class="line">// 1, 2, 3</span><br></pre></td></tr></table></figure></li><li><p>·Object.entries·，在另一方面，将会返回对象自身可迭代属性key-value对数组（作为一个数组），他们（key-value）分别以数组存放数组中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> obj = &#123;a: 1, b: 2, c: 3&#125;</span><br><span class="line">JSON.stringify(Object.entries(obj))</span><br><span class="line">// <span class="string">"[["</span>a<span class="string">",1],["</span>b<span class="string">",2],["</span>c<span class="string">",3]]"</span></span><br></pre></td></tr></table></figure></li><li><p>我们可以使用ES6/ES2015解构,从这嵌套数组中分别声明key和value</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">let</span> obj = &#123;a: 1, b: 2, c: 3&#125;</span><br><span class="line">Object.entries(obj).forEach(([key, value]) =&gt; &#123;</span><br><span class="line"> console.log(`<span class="variable">$&#123;key&#125;</span> is <span class="variable">$&#123;value&#125;</span>`)</span><br><span class="line">&#125;)</span><br><span class="line">// a is 1, b is 2, c is 3</span><br></pre></td></tr></table></figure></li></ul><h3 id="padStart-padEnd"><a href="#padStart-padEnd" class="headerlink" title="padStart/padEnd"></a>padStart/padEnd</h3><blockquote><p>字符串的前后填充</p></blockquote><ul><li><p>String.prototype.padStart 和 String.prototype.padEnd在javascript字符操作是一个不错的体验，帮助避免依赖而外的库。<br>他有两个参数，第一个代表字符串长度</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(<span class="string">'vue'</span>.padStart(10).length)</span><br><span class="line">//   10</span><br><span class="line">console.log(<span class="string">'react'</span>.padStart(20).length)</span><br><span class="line">//   10</span><br></pre></td></tr></table></figure></li><li><p>第二个参数，代表填充内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(<span class="string">'vue'</span>.padStart(10, <span class="string">'is'</span>))</span><br><span class="line">// isisisivue</span><br><span class="line">console.log(<span class="string">'react'</span>.padStart(15, <span class="string">'this is'</span>))</span><br><span class="line">//   this isthireact</span><br></pre></td></tr></table></figure></li><li><p>padEnd 从字符串后面填充</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(<span class="string">'vue'</span>.padEnd(10, <span class="string">':-)'</span>))</span><br><span class="line">// <span class="string">"vue:-):-):"</span></span><br><span class="line">console.log(<span class="string">'react'</span>.padEnd(10, <span class="string">'*'</span>))</span><br><span class="line">// <span class="string">"react*****"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;es7&quot;&gt;&lt;a href=&quot;#es7&quot; class=&quot;headerlink&quot; title=&quot;es7&quot;&gt;&lt;/a&gt;es7&lt;/h2&gt;&lt;h3 id=&quot;Array-prototype-includes&quot;&gt;&lt;a href=&quot;#Array-prototype-includes&quot;
      
    
    </summary>
    
    
      <category term="javascripts" scheme="http://yoursite.com/tags/javascripts/"/>
    
  </entry>
  
  <entry>
    <title>audio,video</title>
    <link href="http://yoursite.com/2018/01/12/audio/"/>
    <id>http://yoursite.com/2018/01/12/audio/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-13T05:30:19.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="audio-video基础知识"><a href="#audio-video基础知识" class="headerlink" title="audio\video基础知识"></a>audio\video基础知识</h2><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li>audio.volume</li></ul><p>(读/写) 音量</p><ul><li>audio.src</li></ul><p>(读/写) 歌曲地址</p><ul><li>audio.currentTime</li></ul><p>(读/写) 歌曲当前已播放时长</p><ul><li>audio.duration</li></ul><p>(读) 歌曲的总长度</p><ul><li>audio.paused</li></ul><p>(读) 布尔类型 是否处于暂停状态</p><ul><li>audio.ended</li></ul><p>(读) 布尔类型 歌曲是否已经播放完毕</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><p>audio.play()   播放</p></li><li><p>audio.pause()   暂停</p></li></ul><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><ul><li><p>audio.oncanplay = fn()</p><p>当歌曲下载完之后调用fn</p></li><li><p>audio.onvolumechange = fn()</p><p>当audio.volume发生变换的时候调用fn</p></li><li><p>audio.onplay = fn()</p><p>歌曲开始播放之后调用fn</p></li><li><p>audio.onpause = fn()</p><p>歌曲暂停之后调用fn</p></li><li><p>audio.ontimeupdate = fn()</p><p>歌曲在播放的过程中会一直调用fn</p></li><li><p>audio.onended = fn()</p><p>一首歌曲播放完之后调用fn</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;audio-video基础知识&quot;&gt;&lt;a href=&quot;#audio-video基础知识&quot; class=&quot;headerlink&quot; title=&quot;audio\video基础知识&quot;&gt;&lt;/a&gt;audio\video基础知识&lt;/h2&gt;&lt;h3 id=&quot;属性&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
      <category term="video" scheme="http://yoursite.com/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>node-source</title>
    <link href="http://yoursite.com/2018/01/12/node-source/"/>
    <id>http://yoursite.com/2018/01/12/node-source/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.277Z</updated>
    
    <content type="html"><![CDATA[<p>Node各种资源</p><h2 id="english-api"><a href="#english-api" class="headerlink" title="english  api"></a>english  api</h2><p><a href="https://nodejs.org/api/" target="_blank" rel="noopener">https://nodejs.org/api/</a></p><h2 id="china-api"><a href="#china-api" class="headerlink" title="china api"></a>china api</h2><p><a href="http://nodejs.cn/api/" target="_blank" rel="noopener">http://nodejs.cn/api/</a></p><h2 id="koa-web开发框架"><a href="#koa-web开发框架" class="headerlink" title="koa  web开发框架"></a>koa  web开发框架</h2><p><a href="http://koa.bootcss.com/" target="_blank" rel="noopener">http://koa.bootcss.com/</a></p><h2 id="A-better-and-open-source-search-for-node-packages"><a href="#A-better-and-open-source-search-for-node-packages" class="headerlink" title="A better and open source search for node packages"></a>A better and open source search for node packages</h2><p><a href="https://npms.io/" target="_blank" rel="noopener">https://npms.io/</a></p><h2 id="阮一峰Nodejs"><a href="#阮一峰Nodejs" class="headerlink" title="阮一峰Nodejs"></a>阮一峰Nodejs</h2><p><a href="http://javascript.ruanyifeng.com/nodejs/assert.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/nodejs/assert.html</a></p><h2 id="express"><a href="#express" class="headerlink" title="express"></a>express</h2><p><a href="http://expressjs.com" target="_blank" rel="noopener">http://expressjs.com</a></p><h2 id="express-api"><a href="#express-api" class="headerlink" title="express api"></a>express api</h2><p><a href="http://expressjs.com/zh-cn/4x/api.html" target="_blank" rel="noopener">http://expressjs.com/zh-cn/4x/api.html</a></p><h2 id="Nodejs-资源大全中文版"><a href="#Nodejs-资源大全中文版" class="headerlink" title="Nodejs 资源大全中文版"></a>Nodejs 资源大全中文版</h2><p><a href="https://github.com/Pines-Cheng/awesome-nodejs-cn" target="_blank" rel="noopener">https://github.com/Pines-Cheng/awesome-nodejs-cn</a></p><p>#3    thinkjs文档<br><a href="https://thinkjs.org/zh-cn/doc/index.html" target="_blank" rel="noopener">https://thinkjs.org/zh-cn/doc/index.html</a></p><p><a href="https://www.awesomes.cn/repos/NodeJS/Frameworks" target="_blank" rel="noopener">https://www.awesomes.cn/repos/NodeJS/Frameworks</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Node各种资源&lt;/p&gt;
&lt;h2 id=&quot;english-api&quot;&gt;&lt;a href=&quot;#english-api&quot; class=&quot;headerlink&quot; title=&quot;english  api&quot;&gt;&lt;/a&gt;english  api&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https:/
      
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>week</title>
    <link href="http://yoursite.com/2018/01/12/react-native/"/>
    <id>http://yoursite.com/2018/01/12/react-native/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.281Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/yaoobs/article/details/51755816" target="_blank" rel="noopener">react-Native</a><br><code>Learn Once ,Write Anywhere</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/yaoobs/article/details/51755816&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;react-Native&lt;/a&gt;&lt;br&gt;&lt;code&gt;Learn Once ,Write
      
    
    </summary>
    
    
      <category term="week" scheme="http://yoursite.com/tags/week/"/>
    
  </entry>
  
  <entry>
    <title>node-package</title>
    <link href="http://yoursite.com/2018/01/12/node-package/"/>
    <id>http://yoursite.com/2018/01/12/node-package/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Awesome-Node-js-中文版"><a href="#Awesome-Node-js-中文版" class="headerlink" title="Awesome Node.js 中文版"></a>Awesome Node.js 中文版</h1><blockquote><p>一份nodejs的超级大礼包 <a href="#包">包(packages)</a> and <a href="#资源">资源(resources)</a>。</p></blockquote><p>被老外的<a href="https://github.com/sindresorhus/awesome" target="_blank" rel="noopener">awesome</a> 清单刺激到，觉得有必要翻译一份，为国产的程序员们做点事情，本清单将保持实时更新同步。PS:进都进来了，就顺便看看其他的吧:</p><ul><li><a href="https://github.com/Pines-Cheng/awesome-gulp-cn" target="_blank" rel="noopener">awesome-gulp-cn</a></li><li><a href="https://github.com/Pines-Cheng/awesome-angularjs-cn" target="_blank" rel="noopener">awesome-angularjs-cn</a></li><li><a href="https://github.com/Pines-Cheng/awesome-react-cn" target="_blank" rel="noopener">awesome-react-cn</a></li><li><a href="https://github.com/Pines-Cheng/awesome-react-native-cn" target="_blank" rel="noopener">awesome-react-native-cn</a></li><li><a href="https://github.com/Pines-Cheng/awesome-npm-cn" target="_blank" rel="noopener">awesome-npm-cn</a></li></ul><p>如果想加入，那就加入吧。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#包">包(Packages)</a><ul><li><a href="#神奇的科学mad-science">神奇的科学(mad science)</a></li><li><a href="#命令行应用">命令行应用</a></li><li><a href="#实用的程序">实用的程序</a></li><li><a href="#http">HTTP</a></li><li><a href="#调试--数据">调试/数据</a></li><li><a href="#日志">日志</a></li><li><a href="#命令行工具">命令行工具</a></li><li><a href="#构建工具">构建工具</a></li><li><a href="#硬件">硬件</a></li><li><a href="#模板">模板</a></li><li><a href="#web框架">Web框架</a></li><li><a href="#文档">文档</a></li><li><a href="#文件系统">文件系统</a></li><li><a href="#流控制">流控制</a></li><li><a href="#流">流</a></li><li><a href="#实时">实时</a></li><li><a href="#图片">图片</a></li><li><a href="#文本">文本</a></li><li><a href="#数字">数字</a></li><li><a href="#数学">数学</a></li><li><a href="#日期">日期</a></li><li><a href="#url">URL</a></li><li><a href="#数据校验">数据校验</a></li><li><a href="#解析">解析</a></li><li><a href="#人性">人性</a></li><li><a href="#压缩">压缩</a></li><li><a href="#网络">网络</a></li><li><a href="#数据库">数据库</a></li><li><a href="#测试">测试</a></li><li><a href="#基准化分析">基准化分析</a></li><li><a href="#缩小">缩小</a></li><li><a href="#验证">验证</a></li><li><a href="#email">Email</a></li><li><a href="#工作队列">工作队列</a></li><li><a href="#nodejs管理">Node.js管理</a></li><li><a href="#兼容">兼容</a></li><li><a href="#自然语言处理">自然语言处理</a></li><li><a href="#进程管理">进程管理</a></li><li><a href="#自动化">自动化</a></li><li><a href="#ast">AST</a></li><li><a href="#静态站点生成器">静态站点生成器</a></li><li><a href="#CMS">CMS</a></li><li><a href="#论坛">论坛</a></li><li><a href="#博客">博客</a></li><li><a href="#奇奇怪怪的东东">奇奇怪怪的东东</a></li><li><a href="#其他">其他</a></li></ul></li><li><a href="#资源">资源</a><ul><li><a href="#tutorials">入门</a></li><li><a href="#discovery">发现</a></li><li><a href="#articles">文章</a></li><li><a href="#新闻">新闻</a></li><li><a href="#视频">视频</a></li><li><a href="#直播">直播</a></li><li><a href="#书籍">书籍</a></li><li><a href="#博客">博客</a></li><li><a href="#课程">课程</a></li><li><a href="#夹带">夹带</a></li><li><a href="#工具">工具</a></li><li><a href="#社区">社区</a></li><li><a href="#其他">其他</a></li></ul></li></ul><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><h3 id="神奇的科学"><a href="#神奇的科学" class="headerlink" title="神奇的科学"></a>神奇的科学</h3><ul><li><a href="https://github.com/feross/webtorrent" target="_blank" rel="noopener">webtorrent</a> - WebTorrent 是一个可工作在node.js和浏览器的流BT客户端。它完全采用JavaScript开发，在浏览器中WebTorrent使用WebRTC (data channels) 来进行p2p传输。它可以不使用浏览器插件，扩展或安装。只有JavaScript。</li><li><a href="https://github.com/cjb/GitTorrent" target="_blank" rel="noopener">GitTorrent</a> - Git仓库的P2P网络，通过比特流分享。</li><li><a href="https://github.com/mafintosh/peerflix" target="_blank" rel="noopener">peerflix</a> - 流客户端.</li><li><a href="http://dat-data.com" target="_blank" rel="noopener">dat</a> - Dat 是开源的项目，进行实时复制，数据集版本控制，提供每个文件格式和数据存储后端的流。.</li><li><a href="https://github.com/ipfs/js-ipfs" target="_blank" rel="noopener">ipfs</a> - IPFS 是分布式文件系统，寻求连接所有计算机设备的相同文件系统。在某些方面，这很类似于原始的 Web 目标，但是 IPFS 最终会更像单个比特流群交换的 git 对象。</li><li><a href="http://stack.gl" target="_blank" rel="noopener">stackgl</a> - WebGL的开源软件生态系统，基于browserify和npm构建。</li><li><a href="https://github.com/mafintosh/peerwiki" target="_blank" rel="noopener">peerwiki</a> - 比特流上的所有wiki</li><li><a href="https://github.com/mafintosh/peercast" target="_blank" rel="noopener">peercast</a> - 推送视频流到Chromecast.</li><li><a href="http://bitcoinjs.org" target="_blank" rel="noopener">BitcoinJS</a> - BitcoinJS 是一个纯 JavaScript 库，支持 Node.js和浏览器，用于操作各种比特币钱包。代码清晰，可读性强。</li><li><a href="https://bitcore.io/" target="_blank" rel="noopener">Bitcore</a> - Bitcore 是一个完整原生的比特币网络的 JavaScript 开发库，提供比特币应用开发的核心功能。</li><li><a href="http://pdfkit.org" target="_blank" rel="noopener">PDFKit</a> - PDF生成器库.</li><li><a href="https://github.com/Turfjs/turf" target="_blank" rel="noopener">turf</a> - Turf 是一个 JavaScript 的模块化的 GIS 引擎，它执行地理空间与GeoJSON数据处理任务,可以在服务器或在浏览器上运行。</li><li><a href="https://github.com/mafintosh/webcat" target="_blank" rel="noopener">webcat</a> - 使用您的GitHub的私有/公共密钥认证的p2p管道，可以通过WebRTC跨web使用。</li><li><a href="https://github.com/creationix/js-git" target="_blank" rel="noopener">js-git</a> - Git的JavaScript实现。</li><li><a href="http://node-os.com" target="_blank" rel="noopener">NodeOS</a> - 第一个通过npm实现的操作系统，使用Node.js编写。</li><li><a href="https://github.com/erelsgl/limdu" target="_blank" rel="noopener">limdu</a> - 一个机器学习框架。</li><li><a href="http://js.cytoscape.org" target="_blank" rel="noopener">Cytoscape.js</a> - Cytoscape.js 是个开源 JavaScript 图形库，用户可以用 Cytoscape.js 来分析和制作可视化图形。它兼容 CommonJS/Node.js, jQuery 1.4+ 和纯 JavaScript。</li></ul><h3 id="命令行应用"><a href="#命令行应用" class="headerlink" title="命令行应用"></a>命令行应用</h3><ul><li><a href="https://github.com/sindresorhus/pageres" target="_blank" rel="noopener">pageres</a> - 网站截图工具。</li><li><a href="https://github.com/sindresorhus/trash" target="_blank" rel="noopener">trash</a> - trash 命令替代linux rm命令实现windows回收站的功能</li><li><a href="https://github.com/sindresorhus/npm-name" target="_blank" rel="noopener">npm-name</a> - 检查报名在npm上是否可用。</li><li><a href="https://github.com/sindresorhus/xo" target="_blank" rel="noopener">XO</a> - XO 是 JavaScript 幸福样式，强制执行严格代码风格，pull request 的时候不会再讨论代码风格。没有 .eslintrc，.jshintrc，.jscsrc 管理。</li><li><a href="https://github.com/sindresorhus/speed-test" target="_blank" rel="noopener">speed-test</a> - 测试网络连接速度和ping。</li><li><a href="https://github.com/sindresorhus/np" target="_blank" rel="noopener">np</a> - 比<code>npm publish</code>更好用。</li><li><a href="https://github.com/yeoman/yo" target="_blank" rel="noopener">yo</a> - 运行Yeoman生成器。</li><li><a href="https://babeljs.io/docs/usage/cli/" target="_blank" rel="noopener">Babel</a> - 从现在开始使用下一代JavaScript。</li><li><a href="http://eslint.org" target="_blank" rel="noopener">ESLint</a> - ESLint 是一个开源的插件化得JavaScript验证工具，相比JSLint，ESLint具有可配置性。</li><li><a href="https://github.com/jscs-dev/node-jscs" target="_blank" rel="noopener">JSCS</a> - JavaScript代码风格检查。</li><li><a href="https://github.com/feross/standard" target="_blank" rel="noopener">Standard</a> - JavaScript标准风格，使用一种风格来限制所有。</li><li><a href="https://github.com/sindresorhus/cpy" target="_blank" rel="noopener">cpy</a> - 复制文件。</li><li><a href="https://github.com/sindresorhus/fkill-cli" target="_blank" rel="noopener">fkill</a> - 跨平台的，更好的杀死进程的方式。</li><li><a href="https://github.com/dthree/vantage" target="_blank" rel="noopener">vantage</a> - Vangtage.js 是一个全新的 Node 交互式 CLI。Vangtage 灵感来源于 commander.js，通过 inquirer.js 的交互式 prompt 把在线 Node 应用转换到 CLI。可以本地或者远程访问，Vantage 可以让你构建自己的 API，导入社区扩展等等。</li><li><a href="https://github.com/MrRio/vtop" target="_blank" rel="noopener">vtop</a> - 更好更漂亮的图表。</li><li><a href="https://github.com/sindresorhus/tmpin" target="_blank" rel="noopener">tmpin</a> - 给所有能接受文件输入的CLI应用添加标准输入支持。</li><li><a href="https://github.com/sindresorhus/empty-trash" target="_blank" rel="noopener">empty-trash</a> - 清空回收站。</li><li><a href="https://github.com/sindresorhus/is-up" target="_blank" rel="noopener">is-up</a> - 检查Web站点是否在线。</li><li><a href="https://github.com/sindresorhus/is-online" target="_blank" rel="noopener">is-online</a> - 检查是否联网。</li><li><a href="https://github.com/sindresorhus/public-ip" target="_blank" rel="noopener">public-ip</a> - 获取你的公网IP。</li><li><a href="https://github.com/sindresorhus/dark-mode" target="_blank" rel="noopener">dark-mode</a> - 触发OS X的夜间模式。</li><li><a href="https://github.com/chjj/ttystudio" target="_blank" rel="noopener">ttystudio</a> - 记录你的终端并且编译成GIF或者APNG动态图，无需任何依赖，bash脚本或者gif相关的东西。</li><li><a href="https://github.com/alanshaw/david" target="_blank" rel="noopener">David</a> - 当你的npm依赖过时的时候通知你。</li><li><a href="https://github.com/indexzero/http-server" target="_blank" rel="noopener">http-server</a> - 简单，零配置的命令行HTTP服务器。</li><li><a href="https://github.com/tapio/live-server" target="_blank" rel="noopener">Live Server</a> - 一个自带热加载功能的http服务器。</li><li><a href="https://github.com/kessler/node-bcat" target="_blank" rel="noopener">bcat</a> - 将命令行输出到web浏览器。</li><li><a href="https://github.com/pawurb/normit" target="_blank" rel="noopener">normit</a> - 在终端运行的包含语音合成Google翻译。</li><li><a href="https://github.com/slap-editor/slap" target="_blank" rel="noopener">slap</a> - 类似于Sublime的基于命令行的文本编辑器。</li><li><a href="https://github.com/danielstjules/jsinspect" target="_blank" rel="noopener">jsinspect</a> - 发现复制粘贴的或者结构相似代码。</li><li><a href="https://github.com/millermedeiros/esformatter" target="_blank" rel="noopener">esformatter</a> - JavaScript代码格式化。</li><li><a href="https://github.com/danielstjules/pjs" target="_blank" rel="noopener">pjs</a> - 能作为管道使用的JavaScript，从终端快速过滤，映射等。</li><li><a href="https://github.com/davglass/license-checker" target="_blank" rel="noopener">license-checker</a> - 检查应用的依赖的证书。</li><li><a href="https://github.com/juliangruber/browser-run" target="_blank" rel="noopener">browser-run</a> - 轻松在浏览器环境中运行代码。</li><li><a href="https://github.com/runvnc/modhelp" target="_blank" rel="noopener">modhelp</a> -在终端动态高亮README模块。</li><li><a href="https://github.com/kevva/wifi-password" target="_blank" rel="noopener">wifi-password</a> - 在终端通过命令行获取当前的wifi密码。.</li><li><a href="https://github.com/sindresorhus/wallpaper" target="_blank" rel="noopener">wallpaper</a> -命令行改变桌面的背景。</li><li><a href="https://github.com/kevva/brightness-cli" target="_blank" rel="noopener">brightness</a> - 命令行改变屏幕的亮度。</li><li><a href="https://github.com/maxogden/torrent" target="_blank" rel="noopener">torrent</a> - 下载种子。</li><li><a href="https://github.com/jasnell/tfa" target="_blank" rel="noopener">tfa</a> - Two-factor验证客户端。</li><li><a href="https://github.com/kilianc/rtail" target="_blank" rel="noopener">rtail</a> - 使用Unix管道，在终端实时输出浏览器多个流。</li><li><a href="https://github.com/sindresorhus/kill-tabs" target="_blank" rel="noopener">kill-tabs</a> - 通过关闭Chrome 窗口来提升性能，减少电池消耗，节约内存。</li><li><a href="https://github.com/wooorm/alex" target="_blank" rel="noopener">alex</a> - Catch insensitive, inconsiderate writing.</li><li><a href="https://github.com/noraesae/pen" target="_blank" rel="noopener">pen</a> - 浏览器中的你最喜欢的编辑器Markdown实时预览。</li><li><a href="https://github.com/beatfreaker/subdownloader" target="_blank" rel="noopener">subdownloader</a> - 电影和电视剧的字幕下载。</li><li><a href="https://github.com/nogizhopaboroda/iponmap" target="_blank" rel="noopener">iponmap</a> - IP地址查找。</li><li><a href="https://github.com/Javascipt/Jsome" target="_blank" rel="noopener">Jsome</a> - 根据配置的颜色和排版格式化打印JSON。</li><li><a href="https://github.com/mischah/itunes-remote" target="_blank" rel="noopener">itunes-remote</a> -iTunes交互控制.</li><li><a href="https://github.com/samverschueren/dev-time-cli" target="_blank" rel="noopener">dev-time</a> - 获取一个用户当前的本地时间.</li><li><a href="https://github.com/beatfreaker/text-meme-cli" target="_blank" rel="noopener">text-meme</a> - 生成一个text meme.</li><li><a href="https://github.com/samverschueren/mobicon-cli" target="_blank" rel="noopener">mobicon</a> - 生成手机应用的icon.</li><li><a href="https://github.com/samverschueren/mobisplash-cli" target="_blank" rel="noopener">mobisplash</a> - 生成手机应用的 splash 屏幕.</li><li><a href="https://github.com/rtfpessoa/diff2html-cli" target="_blank" rel="noopener">diff2html-cli</a> - 好看的 git diff 的html生成器.</li><li><a href="https://github.com/dthree/cash" target="_blank" rel="noopener">Cash</a> - 纯js实现的跨平台的Unix shell命令.</li><li><a href="https://github.com/sindresorhus/vaca" target="_blank" rel="noopener">vaca</a> - 获取一个随机的ASCII 🐮.</li><li><a href="https://github.com/sindresorhus/gh-home" target="_blank" rel="noopener">gh-home</a> - 在当前的directory打开一个GitHub仓库的页面.</li><li><a href="https://github.com/sindresorhus/npm-home" target="_blank" rel="noopener">npm-home</a> - 打开一个npm包的home页面.</li></ul><h3 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h3><ul><li><a href="https://lodash.com/" target="_blank" rel="noopener">lodash</a> - 一个工具库，相当于一个更好更快的 Underscore.js.</li><li><a href="https://github.com/facebook/immutable-js" target="_blank" rel="noopener">immutable</a> - 数据持久化.</li><li><a href="http://swannodette.github.io/mori/" target="_blank" rel="noopener">mori</a> - A library for using使用 ClojureScript的持久化数据结构，且支持 vanilla JavaScript API的库.</li><li><a href="http://ramdajs.com" target="_blank" rel="noopener">Ramda</a> - 专注于灵活的函数式编程的工具库，能力来自于自动柯里化和函数参数优先于数据，提供了mutating data.</li><li><a href="http://folktalejs.org/" target="_blank" rel="noopener">Folktale</a> - 一整套通用的JavaScript函数式编程方案，帮助你构建优雅的，组合式的健壮且高度复用的应用。</li><li><a href="http://documentcloud.github.io/underscore-contrib/" target="_blank" rel="noopener">underscore-contrib</a> - The brass buckles on Underscore’s utility belt.</li><li><a href="http://moutjs.com" target="_blank" rel="noopener">Mout</a> - 和其他工具库最大的不同是，你可以选择只下载你需要的模块或函数，没有额外的负担。</li><li><a href="http://reactivex.io" target="_blank" rel="noopener">RxJS</a> - 函数式响应式编程库，专注于大量不同数据的转换，构建和查询。</li><li><a href="https://github.com/dtao/lazy.js" target="_blank" rel="noopener">Lazy.js</a> - Lazy.js是类似Underscore或Lo-Dash的JavaScript工具库，但是它有一个非常独特的特性：惰性求值。很多情况下，惰性求值都将带来巨大的性能提升，特别是当处理巨大的数组和连锁使用多个方法的时候。</li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><ul><li><a href="https://github.com/sindresorhus/got" target="_blank" rel="noopener">got</a> - A nicer interface to the built-in <code>http</code> module.</li><li><a href="https://github.com/sindresorhus/gh-got" target="_blank" rel="noopener">gh-got</a> - Convenience wrapper for <code>got</code> to interact with the GitHub API.</li><li><a href="https://github.com/request/request" target="_blank" rel="noopener">request</a> - Simplified HTTP request client.</li><li><a href="https://github.com/pgte/nock" target="_blank" rel="noopener">Nock</a> - A HTTP mocking and expectations library.</li><li><a href="https://github.com/substack/hyperquest" target="_blank" rel="noopener">hyperquest</a> - Streaming HTTP requests.</li><li><a href="https://github.com/mzabriskie/axios" target="_blank" rel="noopener">axios</a> - Promise based HTTP client (works in the browser too).</li><li><a href="https://github.com/indutny/node-spdy" target="_blank" rel="noopener">spdy</a> - Creates SPDY servers with the same API as the built-in <code>https</code> module.</li><li><a href="https://github.com/hapijs/wreck" target="_blank" rel="noopener">wreck</a> - HTTP Client Utilities.</li><li><a href="https://github.com/kevva/download" target="_blank" rel="noopener">download</a> - Download and extract files effortlessly.</li><li><a href="https://github.com/nodejitsu/node-http-proxy" target="_blank" rel="noopener">http-proxy</a> - A full-featured HTTP proxy.</li><li><a href="https://github.com/h2non/rocky" target="_blank" rel="noopener">rocky</a> - Featured, middleware-oriented HTTP proxy with traffic replay and intercept.</li><li><a href="https://github.com/visionmedia/superagent" target="_blank" rel="noopener">superagent</a> - A small progressive HTTP request library.</li></ul><h3 id="Debugging-Profiling"><a href="#Debugging-Profiling" class="headerlink" title="Debugging / Profiling"></a>Debugging / Profiling</h3><ul><li><a href="https://github.com/s-a/iron-node" target="_blank" rel="noopener">ironNode</a> - Node.js debugger supporting ES2015 out of the box.</li><li><a href="https://github.com/node-inspector/node-inspector" target="_blank" rel="noopener">node-inspector</a> - Debugger based on Blink Developer Tools.</li><li><a href="https://github.com/adobe-research/theseus" target="_blank" rel="noopener">Theseus</a> - A new type of JavaScript debugger featuring real-time code coverage, retroactive inspection and asynchronous call tree.</li><li><a href="https://github.com/mattinsler/longjohn" target="_blank" rel="noopener">longjohn</a> - Long stack traces with configurable call trace length.</li><li><a href="https://github.com/visionmedia/debug" target="_blank" rel="noopener">debug</a> - Tiny debugging utility.</li><li><a href="https://github.com/jstrace/jstrace" target="_blank" rel="noopener">jstrace</a> - Dynamic tracing for JavaScript, similar to dtrace, ktap etc.</li><li><a href="https://github.com/mafintosh/why-is-node-running" target="_blank" rel="noopener">why-is-node-running</a> - Node.js is running but you don’t know why?</li><li><a href="https://github.com/valyouw/njstrace" target="_blank" rel="noopener">njsTrace</a> - Instrument and trace your code, see all function calls, arguments, return values, as well as the time spent in each function.</li><li><a href="https://github.com/joyent/node-vstream" target="_blank" rel="noopener">vstream</a> - Instrumentable streams mix-ins to inspect a pipeline of streams.</li><li><a href="https://github.com/watson/stackman" target="_blank" rel="noopener">stackman</a> - Enhance an error stacktrace with code excerpts and other goodies.</li><li><a href="https://github.com/traceglMPL/tracegl" target="_blank" rel="noopener">TraceGL</a> - Transforms your JavaScript, injecting monitoring code that produces a log of everything that happens.</li><li><a href="https://github.com/alidavut/locus" target="_blank" rel="noopener">locus</a> - Starts a REPL at runtime that has access to all variables.</li><li><a href="https://github.com/buggerjs/bugger" target="_blank" rel="noopener">bugger</a> - Provides Chrome Devtools bindings to debug programs in Chrome.</li><li><a href="https://github.com/davidmarkclements/0x" target="_blank" rel="noopener">0x</a> - Flamegraph profiling.</li></ul><h3 id="Logging"><a href="#Logging" class="headerlink" title="Logging"></a>Logging</h3><ul><li><a href="https://github.com/winstonjs/winston" target="_blank" rel="noopener">winston</a> - A multi-transport async logging library.</li><li><a href="https://github.com/trentm/node-bunyan" target="_blank" rel="noopener">Bunyan</a> - A simple and fast JSON logging library.</li><li><a href="http://seanmonstar.github.io/intel/" target="_blank" rel="noopener">intel</a> - A comprehensive logging library (handlers, filters, formatters, console injection).</li><li><a href="https://github.com/watson/console-log-level" target="_blank" rel="noopener">console-log-level</a> - The most simple logger imaginable with support for log levels and custom prefixes.</li></ul><h3 id="Command-line-utilities"><a href="#Command-line-utilities" class="headerlink" title="Command-line utilities"></a>Command-line utilities</h3><ul><li><a href="https://github.com/chalk/chalk" target="_blank" rel="noopener">chalk</a> - Terminal string styling done right.</li><li><a href="https://github.com/sindresorhus/meow" target="_blank" rel="noopener">meow</a> - CLI app helper.</li><li><a href="https://github.com/substack/minimist" target="_blank" rel="noopener">minimist</a> - Parse command-line flags.</li><li><a href="https://github.com/sindresorhus/get-stdin" target="_blank" rel="noopener">get-stdin</a> - Easier stdin.</li><li><a href="https://github.com/sindresorhus/user-home" target="_blank" rel="noopener">user-home</a> - Get the path to the user home directory.</li><li><a href="https://github.com/sindresorhus/log-update" target="_blank" rel="noopener">log-update</a> - Log by overwriting the previous output in the terminal. Useful for rendering progress bars, animations, etc.</li><li><a href="https://github.com/SBoudrias/Inquirer.js" target="_blank" rel="noopener">Inquirer.js</a> - Interactive command-line prompt.</li><li><a href="https://github.com/yeoman/update-notifier" target="_blank" rel="noopener">update-notifier</a> - Update notifications for your CLI app.</li><li><a href="https://github.com/sindresorhus/ansi-escapes" target="_blank" rel="noopener">ansi-escapes</a> - ANSI escape codes for manipulating the terminal.</li><li><a href="https://github.com/sindresorhus/sudo-block" target="_blank" rel="noopener">sudo-block</a> - Block users from running your app with root permissions.</li><li><a href="https://github.com/yeoman/configstore" target="_blank" rel="noopener">configstore</a> - Easily load and persist config without having to think about where and how.</li><li><a href="https://github.com/yeoman/insight" target="_blank" rel="noopener">insight</a> - Helps you understand how your tool is being used by anonymously reporting usage metrics to Google Analytics.</li><li><a href="https://github.com/sindresorhus/log-symbols" target="_blank" rel="noopener">log-symbols</a> - Colored symbols for various log levels.</li><li><a href="https://github.com/sindresorhus/figures" target="_blank" rel="noopener">figures</a> - Unicode symbols with Windows CMD fallbacks.</li><li><a href="https://github.com/sindresorhus/boxen" target="_blank" rel="noopener">boxen</a> - Create boxes in the terminal.</li><li><a href="https://github.com/sindresorhus/string-width" target="_blank" rel="noopener">string-width</a> - Get the visual width of a string - the number of columns required to display it.</li><li><a href="https://github.com/sindresorhus/first-run" target="_blank" rel="noopener">first-run</a> - Check if it’s the first time the process is run.</li><li><a href="https://github.com/sindresorhus/sparkly" target="_blank" rel="noopener">sparkly</a> - Generate sparklines ▁▂▃▅▂▇</li><li><a href="https://github.com/dthree/vorpal" target="_blank" rel="noopener">vorpal</a> - A framework for interactive CLI apps.</li><li><a href="https://github.com/chjj/blessed" target="_blank" rel="noopener">blessed</a> - A curses-like library.</li><li><a href="https://github.com/sindresorhus/yn" target="_blank" rel="noopener">yn</a> - Parse yes/no like values.</li><li><a href="https://github.com/Automattic/cli-table" target="_blank" rel="noopener">cli-table</a> - Pretty unicode tables.</li><li><a href="https://github.com/madbence/node-drawille" target="_blank" rel="noopener">drawille</a> - Draw on the terminal with unicode braille characters.</li><li><a href="https://github.com/maxogden/googleauth" target="_blank" rel="noopener">googleauth</a> - Create and load persistent Google authentication tokens for command-line apps.</li><li><a href="https://github.com/jstrace/chart" target="_blank" rel="noopener">ascii-charts</a> - ASCII bar chart in the terminal.</li><li><a href="https://github.com/tj/node-progress" target="_blank" rel="noopener">progress</a> - Flexible ascii progress bar.</li><li><a href="https://github.com/sindresorhus/cli-cursor" target="_blank" rel="noopener">cli-cursor</a> - Toggle the CLI cursor.</li><li><a href="https://github.com/timoxley/columnify" target="_blank" rel="noopener">columnify</a> - Create text-based columns suitable for console output. Supports cell wrapping.</li><li><a href="https://github.com/shannonmoeller/cli-columns" target="_blank" rel="noopener">cli-columns</a> - Columnated unicode and ansi-safe text lists.</li><li><a href="https://github.com/dominikwilkowski/cfonts" target="_blank" rel="noopener">cfonts</a> - Sexy ASCII fonts for the console.</li><li><a href="https://github.com/codekirei/node-multispinner" target="_blank" rel="noopener">multispinner</a> - Multiple, simultaneous, individually controllable CLI spinners.</li><li><a href="https://github.com/f/omelette" target="_blank" rel="noopener">omelette</a> - Shell autocompletion helper.</li><li><a href="https://github.com/kentcdodds/cross-env" target="_blank" rel="noopener">cross-env</a> - Set environment variables cross-platform.</li><li><a href="https://github.com/shelljs/shelljs" target="_blank" rel="noopener">shelljs</a> - Portable Unix shell commands.</li><li><a href="https://github.com/sindresorhus/loud-rejection" target="_blank" rel="noopener">loud-rejection</a> - Make unhandled promise rejections fail loudly instead of the default silent fail.</li><li><a href="https://github.com/sindresorhus/ora" target="_blank" rel="noopener">ora</a> - Elegant terminal spinner.</li><li><a href="https://github.com/sindresorhus/term-img" target="_blank" rel="noopener">term-img</a> - Display images in your terminal.</li><li><a href="https://github.com/yargs/yargs" target="_blank" rel="noopener">yargs</a> - Command-line parser that automatically generates an elegant user-interface.</li></ul><h3 id="Build-tools"><a href="#Build-tools" class="headerlink" title="Build tools"></a>Build tools</h3><ul><li><a href="http://gulpjs.com" target="_blank" rel="noopener">gulp</a> - Streaming and fast build system that favors code over config.</li><li><a href="https://github.com/broccolijs/broccoli" target="_blank" rel="noopener">Broccoli</a> - A fast, reliable asset pipeline, supporting constant-time rebuilds and compact build definitions.</li><li><a href="https://github.com/substack/node-browserify" target="_blank" rel="noopener">browserify</a> - Browser-side require() the Node.js way.</li><li><a href="https://github.com/webpack/webpack" target="_blank" rel="noopener">webpack</a> - Packs modules and assets for the browser.</li><li><a href="https://github.com/brunch/brunch" target="_blank" rel="noopener">Brunch</a> - Front-end web app build tool with simple declarative config, fast incremental compilation, and an opinionated workflow.</li><li><a href="https://github.com/strongloop/strong-build" target="_blank" rel="noopener">strong-build</a> - Build a node app package and prepare to deploy it as a package to production or use git to commit to a deploy branch.</li><li><a href="http://gruntjs.com" target="_blank" rel="noopener">grunt</a> - Task runner that can perform repetitive tasks like minification, compilation, unit testing, linting, etc.</li><li><a href="https://github.com/start-runner/start" target="_blank" rel="noopener">start</a> - Simple tasks runner powered by composable functions and promise chaining.</li><li><a href="https://github.com/shannonmoeller/ygor" target="_blank" rel="noopener">ygor</a> - A promising task runner for when <code>npm run</code> isn’t enough and everything else is too much.</li></ul><h3 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h3><ul><li><a href="https://github.com/rwaldron/johnny-five" target="_blank" rel="noopener">johnny-five</a> - Firmata based Arduino Framework.</li><li><a href="https://github.com/voodootikigod/node-serialport" target="_blank" rel="noopener">serialport</a> - Access serial ports for reading and writing.</li><li><a href="https://github.com/nonolith/node-usb" target="_blank" rel="noopener">usb</a> - USB library.</li><li><a href="http://cylonjs.com" target="_blank" rel="noopener">cylon.js</a> - Next generation robotics framework with support for 26 different platforms.</li><li><a href="https://github.com/fivdi/i2c-bus" target="_blank" rel="noopener">i2c-bus</a> - I2C serial bus access.</li></ul><h3 id="Templating"><a href="#Templating" class="headerlink" title="Templating"></a>Templating</h3><ul><li><a href="https://github.com/marko-js/marko" target="_blank" rel="noopener">marko</a> - A fast and lightweight HTML-based templating engine that compiles templates to CommonJS modules and supports streaming, async rendering and custom tags.</li><li><a href="https://github.com/mozilla/nunjucks" target="_blank" rel="noopener">nunjucks</a> - A powerful templating engine with inheritance, asynchronous control, and more (jinja2 inspired).</li><li><a href="https://github.com/wycats/handlebars.js" target="_blank" rel="noopener">handlebars.js</a> - A superset of Mustache templates which adds powerful features like helpers and more advanced blocks.</li><li><a href="http://twitter.github.io/hogan.js/" target="_blank" rel="noopener">hogan.js</a> - Twitter’s small, fast, phase-separated compiler for Mustache templates.</li><li><a href="https://github.com/mde/ejs" target="_blank" rel="noopener">EJS</a> - Simple unopinionated templating language.</li><li><a href="https://github.com/jadejs/jade" target="_blank" rel="noopener">Jade</a> - High-performance template engine heavily influenced by Haml.</li></ul><h3 id="Web-frameworks"><a href="#Web-frameworks" class="headerlink" title="Web frameworks"></a>Web frameworks</h3><ul><li><a href="http://koajs.com" target="_blank" rel="noopener">Koa</a> - A new web framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs.</li><li><a href="http://expressjs.com" target="_blank" rel="noopener">Express</a> - A minimal and flexible web application framework, providing a robust set of features for building single and multi-page, and hybrid web applications.</li><li><a href="http://feathersjs.com" target="_blank" rel="noopener">Feathers</a> - A minimal and flexible microservice framework built in the spirit of Express.</li><li><a href="http://hapijs.com" target="_blank" rel="noopener">Hapi</a> - A rich framework for building applications and services.</li><li><a href="http://loopback.io" target="_blank" rel="noopener">LoopBack</a> - Powerful framework for creating REST APIs and easily connecting to backend data sources.</li><li><a href="https://www.meteor.com" target="_blank" rel="noopener">Meteor</a> - An ultra-simple, database-everywhere, data-on-the-wire, pure-Javascript web framework. <em>(You might like <a href="https://github.com/Urigo/awesome-meteor" target="_blank" rel="noopener">awesome-meteor</a>)</em></li><li><a href="http://sailsjs.org" target="_blank" rel="noopener">SailsJS</a> - An MVC web framework with a modern twist, supporting WebSockets, streams, and a data-driven API.</li><li><a href="http://restify.com" target="_blank" rel="noopener">Restify</a> - A node framework built specifically to enable you to build correct REST web services.</li><li><a href="https://github.com/basicallydan/interfake" target="_blank" rel="noopener">Interfake</a> - Rapid prototyping framework for making mock HTTP APIs, with a Node.js, command-line and HTTP interface.</li><li><a href="https://github.com/derbyjs/derby" target="_blank" rel="noopener">Derby</a> - MVC framework, making it easy to write realtime, collaborative applications that run in both Node.js and browsers.</li><li><a href="http://restberry.com" target="_blank" rel="noopener">Restberry</a> - Framework for setting up RESTful JSON APIs, applied to your database models without needing to write any code.</li><li><a href="http://catberry.org" target="_blank" rel="noopener">Catberry</a> - Framework with Flux architecture, isomorphic web-components, and progressive rendering.</li><li><a href="https://thinkjs.org" target="_blank" rel="noopener">ThinkJS</a> - Framework with ES2015+ support, WebSockets, REST API.</li></ul><h3 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h3><ul><li><a href="http://jashkenas.github.io/docco/" target="_blank" rel="noopener">Docco</a> - A quick-and-dirty documentation generator which produces an HTML document that displays your comments intermingled with your code.</li><li><a href="http://usejsdoc.org" target="_blank" rel="noopener">JSDoc</a> - API documentation generator similar to JavaDoc or PHPDoc.</li><li><a href="https://github.com/tj/dox" target="_blank" rel="noopener">dox</a> - JavaScript documentation generator using Markdown and JSDoc.</li><li><a href="https://github.com/sutoiku/jsdox" target="_blank" rel="noopener">jsdox</a> - JSDoc3 to Markdown documentation generator.</li><li><a href="https://github.com/apidoc/apidoc" target="_blank" rel="noopener">apiDoc</a> - Inline documentation for RESTful web APIs.</li><li><a href="http://documentation.js.org" target="_blank" rel="noopener">documentation.js</a> - API documentation generator with support for ES2015+ and flow annotation.</li><li><a href="http://yui.github.com/yuidoc/" target="_blank" rel="noopener">YUIDoc</a> - Generates API documentation from comments in source.</li></ul><h3 id="Filesystem"><a href="#Filesystem" class="headerlink" title="Filesystem"></a>Filesystem</h3><ul><li><a href="https://github.com/sindresorhus/del" target="_blank" rel="noopener">del</a> - Delete files/folders using globs.</li><li><a href="https://github.com/sindresorhus/globby" target="_blank" rel="noopener">globby</a> - Glob files with support for multiple patterns.</li><li><a href="https://github.com/sindresorhus/cpy" target="_blank" rel="noopener">cpy</a> - Copy files.</li><li><a href="https://github.com/isaacs/rimraf" target="_blank" rel="noopener">rimraf</a> - Recursively delete files like <code>rm -rf</code>.</li><li><a href="https://github.com/substack/node-mkdirp" target="_blank" rel="noopener">mkdirp</a> - Recursively create directories like <code>mkdir -p</code>.</li><li><a href="https://github.com/isaacs/node-graceful-fs" target="_blank" rel="noopener">graceful-fs</a> - Drop-in replacement for the <code>fs</code> module with various improvements.</li><li><a href="https://github.com/paulmillr/chokidar" target="_blank" rel="noopener">chokidar</a> - Filesystem watcher which stabilizes events from <code>fs.watch</code> and <code>fs.watchFile</code> as well as using native <code>fsevents</code> on OS X.</li><li><a href="https://github.com/sindresorhus/find-up" target="_blank" rel="noopener">find-up</a> - Find a file by walking up parent directories.</li><li><a href="https://github.com/sindresorhus/load-json-file" target="_blank" rel="noopener">load-json-file</a> - Read and parse a JSON file.</li><li><a href="https://github.com/sindresorhus/write-json-file" target="_blank" rel="noopener">write-json-file</a> - Stringify and write JSON to a file atomically.</li><li><a href="https://github.com/npm/fs-write-stream-atomic" target="_blank" rel="noopener">fs-write-stream-atomic</a> - Like <code>fs.createWriteStream()</code>, but atomic.</li><li><a href="https://github.com/sindresorhus/filenamify" target="_blank" rel="noopener">filenamify</a> - Convert a string to a valid filename.</li><li><a href="https://github.com/kevva/lnfs" target="_blank" rel="noopener">lnfs</a> - Force create symlinks like <code>ln -fs</code>.</li><li><a href="https://github.com/bevry/istextorbinary" target="_blank" rel="noopener">istextorbinary</a> - Check if a file is text or binary.</li><li><a href="https://github.com/szwacz/fs-jetpack" target="_blank" rel="noopener">fs-jetpack</a> - Completely redesigned file system API for convenience in everyday use.</li><li><a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="noopener">fs-extra</a> - Extra methods for the <code>fs</code> module.</li><li><a href="https://github.com/sindresorhus/pkg-dir" target="_blank" rel="noopener">pkg-dir</a> - Find the root directory of an npm package.</li></ul><h3 id="Control-flow"><a href="#Control-flow" class="headerlink" title="Control flow"></a>Control flow</h3><ul><li>Promises<ul><li><a href="https://github.com/petkaantonov/bluebird" target="_blank" rel="noopener">Bluebird</a> - A fully featured promise library with focus on innovative features and performance.</li><li><a href="https://github.com/floatdrop/pinkie-promise" target="_blank" rel="noopener">pinkie-promise</a> - Promise ponyfill.</li><li><a href="https://github.com/sindresorhus/pify" target="_blank" rel="noopener">pify</a> - Promisify a callback-style function.</li><li><a href="https://github.com/samverschueren/rfpify" target="_blank" rel="noopener">rfpify</a> - Promisify a result-first callback-style function.</li><li><a href="https://github.com/sindresorhus/delay" target="_blank" rel="noopener">delay</a> - Delay a promise a specified amount of time.</li></ul></li><li>Callbacks<ul><li><a href="https://github.com/sindresorhus/each-async" target="_blank" rel="noopener">each-async</a> - Async concurrent iterator like forEach.</li><li><a href="https://github.com/caolan/async" target="_blank" rel="noopener">async</a> - Provides straight-forward, powerful functions for working with asynchronicity.</li><li><a href="https://github.com/hash-bang/async-chainable" target="_blank" rel="noopener">async-chainable</a> - Chainable, pluggable async functionality.</li><li><a href="https://github.com/watson/after-all-results" target="_blank" rel="noopener">after-all-results</a> - Bundle results of async functions calls into one callback with all the results.</li></ul></li><li>Generators<ul><li><a href="https://github.com/tj/co" target="_blank" rel="noopener">co</a> - The ultimate generator based flow-control goodness.</li><li><a href="https://github.com/jmar777/suspend" target="_blank" rel="noopener">suspend</a> - Generator-based control flow that plays nice with callbacks, promises, and thunks.</li><li><a href="https://github.com/novacrazy/bluebird-co" target="_blank" rel="noopener">bluebird-co</a> - A set of high performance yield handlers for Bluebird coroutines.</li></ul></li><li>Streams<ul><li><a href="http://highlandjs.org" target="_blank" rel="noopener">Highland.js</a> - Manages synchronous and asynchronous code easily, using nothing more than standard JavaScript and Node-like Streams.</li></ul></li><li>Channels<ul><li><a href="https://github.com/jlongster/js-csp" target="_blank" rel="noopener">js-csp</a> - Communicating sequential processes for JavaScript (like Clojurescript core.async, or Go).</li></ul></li><li>Other<ul><li><a href="https://github.com/strongloop/zone" target="_blank" rel="noopener">zone</a> - Provides a way to group and track resources and errors across asynchronous operations.</li></ul></li></ul><h3 id="Streams"><a href="#Streams" class="headerlink" title="Streams"></a>Streams</h3><ul><li><a href="https://github.com/rvagg/through2" target="_blank" rel="noopener">through2</a> - Tiny wrapper around streams2 Transform to avoid explicit subclassing noise.</li><li><a href="https://github.com/hughsk/from2" target="_blank" rel="noopener">from2</a> - Convenience wrapper for ReadableStream, inspired by <code>through2</code>.</li><li><a href="https://github.com/sindresorhus/get-stream" target="_blank" rel="noopener">get-stream</a> - Get a stream as a string or buffer.</li><li><a href="https://github.com/maxogden/concat-stream" target="_blank" rel="noopener">concat-stream</a> - Concatenates a stream into strings or binary data.</li><li><a href="https://github.com/sindresorhus/into-stream" target="_blank" rel="noopener">into-stream</a> - Convert a buffer/string/array/object into a stream.</li><li><a href="https://github.com/mafintosh/duplexify" target="_blank" rel="noopener">duplexify</a> - Turn a writeable and readable stream into a single streams2 duplex stream.</li><li><a href="https://github.com/mafintosh/pumpify" target="_blank" rel="noopener">pumpify</a> - Combine an array of streams into a single duplex stream.</li><li><a href="https://github.com/mafintosh/peek-stream" target="_blank" rel="noopener">peek-stream</a> - Transform stream that lets you peek the first line before deciding how to parse it.</li><li><a href="https://github.com/maxogden/binary-split" target="_blank" rel="noopener">binary-split</a> - A fast newline (or any delimiter) splitter stream.</li><li><a href="https://github.com/jahewson/node-byline" target="_blank" rel="noopener">byline</a> - Super-simple line-by-line Stream reader.</li><li><a href="https://github.com/sindresorhus/first-chunk-stream" target="_blank" rel="noopener">first-chunk-stream</a> - Transform the first chunk in a stream.</li><li><a href="https://github.com/sindresorhus/pad-stream" target="_blank" rel="noopener">pad-stream</a> - Pad each line in a stream.</li><li><a href="https://github.com/feross/multistream" target="_blank" rel="noopener">multistream</a> - Combine multiple streams into a single stream.</li><li><a href="https://github.com/substack/stream-combiner2" target="_blank" rel="noopener">stream-combiner2</a> - Turn a pipeline into a single stream.</li><li><a href="https://github.com/nodejs/readable-stream" target="_blank" rel="noopener">readable-stream</a> - Mirror of Streams2 and Streams3 implementations in core.</li><li><a href="https://github.com/almost/through2-concurrent" target="_blank" rel="noopener">through2-concurrent</a> - Transform object streams concurrently.</li><li><a href="https://github.com/e-conomic/graphicsmagick-stream" target="_blank" rel="noopener">graphicsmagick-stream</a> - Fast conversion/scaling of images using a pool of long lived GraphicsMagick processes.</li></ul><h3 id="Real-time"><a href="#Real-time" class="headerlink" title="Real-time"></a>Real-time</h3><ul><li><a href="http://socket.io" target="_blank" rel="noopener">Socket.io</a> - Enables real-time bidirectional event-based communication.</li><li><a href="https://github.com/sockjs/sockjs-node" target="_blank" rel="noopener">SockJS</a> - Low latency, full duplex, cross-domain channel browser-server, with WebSockets or without.</li><li><a href="http://faye.jcoglan.com" target="_blank" rel="noopener">Faye</a> - Real-time client-server message bus, based on Bayeux protocol.</li><li><a href="https://github.com/SocketCluster/socketcluster" target="_blank" rel="noopener">SocketCluster</a> - Scalable HTTP + WebSocket engine which can run on multiple CPU cores.</li><li><a href="https://github.com/primus/primus" target="_blank" rel="noopener">Primus</a> - An abstraction layer for real-time frameworks to prevent module lock-in.</li><li><a href="https://github.com/simonswain/straw" target="_blank" rel="noopener">Straw</a> - Real-time dataflow framework.</li></ul><h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><ul><li><a href="https://github.com/lovell/sharp" target="_blank" rel="noopener">sharp</a> - The fastest module for resizing JPEG, PNG, WebP and TIFF images.</li><li><a href="https://github.com/sindresorhus/image-type" target="_blank" rel="noopener">image-type</a> - Detect the image type of a Buffer/Uint8Array.</li><li><a href="https://github.com/aheckmann/gm" target="_blank" rel="noopener">gm</a> - GraphicsMagick and ImageMagick wrapper.</li><li><a href="https://github.com/EyalAr/lwip" target="_blank" rel="noopener">lwip</a> - Lightweight image processor which does not require ImageMagick.</li><li><a href="https://github.com/nodeca/pica" target="_blank" rel="noopener">pica</a> - High quality &amp; fast resize (lanczos3) in pure JS. Alternative to canvas drawImage(), when no pixelation allowed.</li><li><a href="https://github.com/oliver-moran/jimp" target="_blank" rel="noopener">jimp</a> - Image processing in pure JavaScript.</li><li><a href="https://github.com/sindresorhus/is-progressive" target="_blank" rel="noopener">is-progressive</a> - Check if a JPEG image is progressive.</li><li><a href="https://github.com/nodeca/probe-image-size" target="_blank" rel="noopener">probe-image-size</a> - Get the size of most image formats without a full download.</li></ul><h3 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h3><ul><li><a href="https://github.com/epeli/underscore.string" target="_blank" rel="noopener">Underscore.string</a> - Collection of string manipulation utilities.</li><li><a href="https://github.com/ashtuchkin/iconv-lite" target="_blank" rel="noopener">iconv-lite</a> - Convert character encodings.</li><li><a href="https://github.com/sindresorhus/repeating" target="_blank" rel="noopener">repeating</a> - Repeat a string.</li><li><a href="https://github.com/sindresorhus/string-length" target="_blank" rel="noopener">string-length</a> - Get the real length of a string - by correctly counting astral symbols and ignoring ansi escape codes.</li><li><a href="https://github.com/sindresorhus/camelcase" target="_blank" rel="noopener">camelcase</a> - Convert a dash/dot/underscore/space separated string to camelCase: foo-bar → fooBar.</li><li><a href="https://github.com/sindresorhus/escape-string-regexp" target="_blank" rel="noopener">escape-string-regexp</a> - Escape RegExp special characters.</li><li><a href="https://github.com/sindresorhus/execall" target="_blank" rel="noopener">execall</a> - Find multiple RegExp matches in a string.</li><li><a href="https://github.com/sindresorhus/splice-string" target="_blank" rel="noopener">splice-string</a> - Remove or replace part of a string like <code>Array#splice</code>.</li><li><a href="https://github.com/sindresorhus/indent-string" target="_blank" rel="noopener">indent-string</a> - Indent each line in a string.</li><li><a href="https://github.com/sindresorhus/strip-indent" target="_blank" rel="noopener">strip-indent</a> - Strip leading whitespace from every line in a string.</li><li><a href="https://github.com/sindresorhus/detect-indent" target="_blank" rel="noopener">detect-indent</a> - Detect the indentation of code.</li><li><a href="https://github.com/mathiasbynens/he" target="_blank" rel="noopener">he</a> - A robust HTML entity encoder/decoder.</li><li><a href="https://github.com/mashpie/i18n-node" target="_blank" rel="noopener">i18n-node</a> - Simple translation module with dynamic JSON storage.</li><li><a href="https://github.com/nodeca/babelfish/" target="_blank" rel="noopener">babelfish</a> - i18n with very easy syntax for plurals.</li><li><a href="https://github.com/sindresorhus/parse-columns" target="_blank" rel="noopener">parse-columns</a> - Parse text columns, like the output of Unix commands.</li><li><a href="https://github.com/codekirei/hanging-indent" target="_blank" rel="noopener">hanging-indent</a> - Format a string into a hanging-indented paragraph.</li><li><a href="https://github.com/sindresorhus/matcher" target="_blank" rel="noopener">matcher</a> - Simple wildcard matching.</li></ul><h2 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h2><ul><li><a href="https://github.com/sindresorhus/random-int" target="_blank" rel="noopener">random-int</a> - Generate a random integer.</li><li><a href="https://github.com/sindresorhus/random-float" target="_blank" rel="noopener">random-float</a> - Generate a random float.</li><li><a href="https://github.com/sindresorhus/unique-random" target="_blank" rel="noopener">unique-random</a> - Generate random numbers that are consecutively unique.</li><li><a href="https://github.com/sindresorhus/round-to" target="_blank" rel="noopener">round-to</a> - Round a number to a specific number of decimal places: <code>1.234</code> → <code>1.2</code>.</li></ul><h3 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h3><ul><li><a href="https://github.com/scijs/ndarray" target="_blank" rel="noopener">ndarray</a> - Multidimensional arrays.</li><li><a href="https://github.com/josdejong/mathjs" target="_blank" rel="noopener">mathjs</a> - An extensive math library.</li><li><a href="https://github.com/sindresorhus/math-sum" target="_blank" rel="noopener">math-sum</a> - Sum numbers.</li><li><a href="https://github.com/sindresorhus/math-clamp" target="_blank" rel="noopener">math-clamp</a> - Clamp a number.</li></ul><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><ul><li><a href="http://momentjs.com" target="_blank" rel="noopener">Moment.js</a> - Parse, validate, manipulate, and display dates.</li><li><a href="http://momentjs.com/timezone/" target="_blank" rel="noopener">Moment Timezone</a> - IANA Time Zone Database + Moment.js.</li><li><a href="https://github.com/felixge/node-dateformat" target="_blank" rel="noopener">dateformat</a> - Date formatting.</li><li><a href="https://github.com/samverschueren/tz-format" target="_blank" rel="noopener">tz-format</a> - Format a date with timezone: <code>2015-11-30T10:40:35+01:00</code>.</li></ul><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><ul><li><a href="https://github.com/sindresorhus/normalize-url" target="_blank" rel="noopener">normalize-url</a> - Normalize a URL.</li><li><a href="https://github.com/sindresorhus/humanize-url" target="_blank" rel="noopener">humanize-url</a> - Humanize a URL: <a href="http://sindresorhus.com" target="_blank" rel="noopener">http://sindresorhus.com</a> → sindresorhus.com.</li><li><a href="https://github.com/nodeca/url-unshort" target="_blank" rel="noopener">url-unshort</a> - Expand shortened URLs.</li><li><a href="https://github.com/pid/speakingurl" target="_blank" rel="noopener">speakingurl</a> - Generate a slug from a string with transliteration.</li><li><a href="https://github.com/markdown-it/linkify-it" target="_blank" rel="noopener">linkify-it</a> - Link patterns detector with full unicode support.</li><li><a href="https://github.com/snd/url-pattern" target="_blank" rel="noopener">url-pattern</a> - Easier than regex string matching patterns for URLs and other strings.</li><li><a href="https://github.com/nodeca/embedza" target="_blank" rel="noopener">embedza</a> - Create HTML snippets/embeds from URLs using info from oEmbed, Open Graph, meta tags.</li></ul><h3 id="Data-validation"><a href="#Data-validation" class="headerlink" title="Data validation"></a>Data validation</h3><ul><li><a href="https://github.com/hapijs/joi" target="_blank" rel="noopener">joi</a> - Object schema description language and validator for JavaScript objects.</li><li><a href="https://github.com/mafintosh/is-my-json-valid" target="_blank" rel="noopener">is-my-json-valid</a> - JSON Schema validator that uses code generation to be extremely fast.</li><li><a href="https://github.com/nettofarah/property-validator" target="_blank" rel="noopener">property-validator</a> - Easy property validation for Express.</li></ul><h3 id="Parsing"><a href="#Parsing" class="headerlink" title="Parsing"></a>Parsing</h3><ul><li><a href="https://github.com/wooorm/remark" target="_blank" rel="noopener">remark</a> - Markdown processor powered by plugins.</li><li><a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener">markdown-it</a> - A very fast markdown parser with 100% CommonMark support, extensions and syntax plugins.</li><li><a href="https://github.com/inikulin/parse5" target="_blank" rel="noopener">parse5</a> - Fast full-featured spec compliant HTML parser.</li><li><a href="https://github.com/sindresorhus/strip-json-comments" target="_blank" rel="noopener">strip-json-comments</a> - Strip comments from JSON.</li><li><a href="https://github.com/sindresorhus/strip-css-comments" target="_blank" rel="noopener">strip-css-comments</a> - Strip comments from CSS.</li><li><a href="https://github.com/sindresorhus/parse-json" target="_blank" rel="noopener">parse-json</a> - Parse JSON with more helpful errors.</li><li><a href="https://github.com/medialize/URI.js" target="_blank" rel="noopener">URI.js</a> - URL mutation.</li><li><a href="https://github.com/postcss/postcss" target="_blank" rel="noopener">PostCSS</a> - CSS parser / stringifier.</li><li><a href="https://github.com/dominictarr/JSONStream" target="_blank" rel="noopener">JSONStream</a> - Streaming JSON.parse and stringify.</li><li><a href="https://github.com/mafintosh/csv-parser" target="_blank" rel="noopener">csv-parser</a> - Streaming CSV parser that aims to be faster than everyone else.</li><li><a href="https://github.com/sindresorhus/neat-csv" target="_blank" rel="noopener">neat-csv</a> - Fast CSV parser. Callback interface for the above.</li><li><a href="https://github.com/pegjs/pegjs" target="_blank" rel="noopener">PEG.js</a> - Simple parser generator that produces fast parsers with excellent error reporting.</li><li><a href="https://github.com/lapwinglabs/x-ray" target="_blank" rel="noopener">x-ray</a> - A web scraping utility to see through the <code>&lt;html&gt;</code> noise.</li><li><a href="https://github.com/Hardmath123/nearley" target="_blank" rel="noopener">nearley</a> - Simple, fast, powerful parsing for JavaScript.</li><li><a href="https://github.com/juliangruber/binary-extract" target="_blank" rel="noopener">binary-extract</a> - Extract a value from a buffer of JSON without parsing the whole thing.</li><li><a href="https://github.com/nemtsov/json-mask" target="_blank" rel="noopener">json-mask</a> - Tiny language and engine for selecting parts of an object, hiding/masking the rest.</li><li><a href="https://github.com/stylecow/stylecow" target="_blank" rel="noopener">Stylecow</a> - Parse, manipulate and convert modern CSS to make it compatible with all browsers. Extensible with plugins.</li><li><a href="https://github.com/nodeca/js-yaml" target="_blank" rel="noopener">js-yaml</a> - Very fast YAML parser.</li><li><a href="https://github.com/dominictarr/excel-stream" target="_blank" rel="noopener">excel-stream</a> - Streaming Excel spreadsheet to JSON parser.</li><li><a href="https://github.com/Leonidas-from-XIV/node-xml2js" target="_blank" rel="noopener">xml2js</a> - XML to JavaScript object converter.</li><li><a href="http://zaach.github.io/jison/" target="_blank" rel="noopener">Jison</a> - Friendly JavaScript parser generator. It shares genes with Bison, Yacc and family.</li></ul><h3 id="Humanize"><a href="#Humanize" class="headerlink" title="Humanize"></a>Humanize</h3><ul><li><a href="https://github.com/sindresorhus/pretty-bytes" target="_blank" rel="noopener">pretty-bytes</a> - Convert bytes to a human readable string: <code>1337</code> → <code>1.34 kB</code>.</li><li><a href="https://github.com/sindresorhus/pretty-ms" target="_blank" rel="noopener">pretty-ms</a> - Convert milliseconds to a human readable string: <code>1337000000</code> → <code>15d 11h 23m 20s</code>.</li><li><a href="https://github.com/rauchg/ms.js" target="_blank" rel="noopener">ms</a> - Tiny millisecond conversion utility.</li><li><a href="https://github.com/AriaMinaei/pretty-error" target="_blank" rel="noopener">pretty-error</a> - Errors with less clutter.</li><li><a href="https://github.com/taijinlee/humanize" target="_blank" rel="noopener">humanize</a> - Data formatter for human readability.</li><li><a href="https://github.com/Tjatse/node-readability" target="_blank" rel="noopener">read-art</a> - Extract readable content from any page.</li></ul><h3 id="Compression"><a href="#Compression" class="headerlink" title="Compression"></a>Compression</h3><ul><li><a href="https://github.com/archiverjs/node-archiver" target="_blank" rel="noopener">Archiver</a> - Streaming interface for archive generation, supporting ZIP and TAR.</li><li><a href="https://github.com/bower/decompress-zip" target="_blank" rel="noopener">decompress-zip</a> - Unzip.</li><li><a href="https://github.com/nodeca/pako" target="_blank" rel="noopener">pako</a> - High speed zlib port to pure js (deflate, inflate, gzip).</li><li><a href="https://github.com/mafintosh/tar-stream" target="_blank" rel="noopener">tar-stream</a> - Streaming tar parser and generator. Also see <a href="https://github.com/mafintosh/tar-fs" target="_blank" rel="noopener">tar-fs</a>.</li><li><a href="https://github.com/kevva/decompress" target="_blank" rel="noopener">decompress</a> - A pluggable decompression module with support for <code>tar</code>, <code>tar.gz</code> and <code>zip</code> files out of the box.</li></ul><h3 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h3><ul><li><a href="https://github.com/sindresorhus/get-port" target="_blank" rel="noopener">get-port</a> - Get an available port.</li><li><a href="https://github.com/sindresorhus/ipify" target="_blank" rel="noopener">ipify</a> - Get your public IP address.</li><li><a href="https://github.com/bevry/getmac" target="_blank" rel="noopener">getmac</a> - Get the computer MAC address.</li></ul><h3 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h3><ul><li>Drivers<ul><li><a href="https://github.com/Level/levelup" target="_blank" rel="noopener">LevelUP</a> - LevelDB.</li><li><a href="https://github.com/mongodb/node-mongodb-native" target="_blank" rel="noopener">MongoDB</a> - MongoDB driver.</li><li><a href="https://github.com/brianc/node-postgres" target="_blank" rel="noopener">PostgreSQL</a> - PostgreSQL client. Pure JavaScript and native libpq bindings.</li><li><a href="https://github.com/felixge/node-mysql" target="_blank" rel="noopener">MySQL</a> - MySQL client.</li><li><a href="https://github.com/luin/ioredis" target="_blank" rel="noopener">Redis</a> - Redis client.</li></ul></li><li>ODM / ORM<ul><li><a href="http://bookshelfjs.org" target="_blank" rel="noopener">Bookshelf</a> - ORM for PostgreSQL, MySQL and SQLite3 in the style of Backbone.js.</li><li><a href="https://github.com/robconery/massive-js" target="_blank" rel="noopener">Massive</a> - PostgreSQL data access tool.</li><li><a href="http://mongoosejs.com" target="_blank" rel="noopener">Mongoose</a> - Elegant MongoDB object modeling.</li><li><a href="https://github.com/sequelize/sequelize" target="_blank" rel="noopener">Sequelize</a> - Multi-dialect ORM. Supports PostgreSQL, SQLite, MySQL.</li><li><a href="https://github.com/balderdashy/waterline" target="_blank" rel="noopener">Waterline</a> - Datastore-agnostic tool that dramatically simplifies interaction with one or more databases.</li><li><a href="https://github.com/SierraSoftworks/Iridium" target="_blank" rel="noopener">Iridium</a> - A high performance MongoDB ORM with support for promises, distributed caching, preprocessing, validation and plugins.</li><li><a href="https://github.com/PhilWaldmann/openrecord" target="_blank" rel="noopener">OpenRecord</a> - ORM for PostgreSQL, MySQL, SQLite3 and RESTful datastores. Similar to ActiveRecord.</li><li><a href="https://github.com/dresende/node-orm2" target="_blank" rel="noopener">orm2</a> - ORM for PostgreSQL, MariaDB, MySQL, Amazon Redshift, SQLite, MongoDB.</li><li><a href="https://github.com/fahad19/firenze" target="_blank" rel="noopener">firenze</a> - Adapter-based ORM for MySQL, Memory, Redis, localStorage and more.</li></ul></li><li>Query builder<ul><li><a href="http://knexjs.org" target="_blank" rel="noopener">Knex</a> - A query builder for PostgreSQL, MySQL and SQLite3, designed to be flexible, portable, and fun to use.</li></ul></li><li>Other<ul><li><a href="https://github.com/louischatriot/nedb" target="_blank" rel="noopener">NeDB</a> - Embedded persistent database written in JavaScript.</li></ul></li></ul><h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h3><ul><li><a href="https://ava.li" target="_blank" rel="noopener">AVA</a> - Futuristic test runner.</li><li><a href="https://github.com/isaacs/node-tap" target="_blank" rel="noopener">tap</a> - A TAP test framework.</li><li><a href="https://github.com/substack/tape" target="_blank" rel="noopener">tape</a> - TAP-producing test harness.</li><li><a href="http://mochajs.org" target="_blank" rel="noopener">Mocha</a> - A feature-rich test framework making asynchronous testing simple and fun.</li><li><a href="https://github.com/power-assert-js/power-assert" target="_blank" rel="noopener">power-assert</a> - Provides descriptive assertion messages through the standard assert interface.</li><li><a href="https://github.com/mantoni/mochify.js" target="_blank" rel="noopener">Mochify</a> - TDD with Browserify, Mocha, PhantomJS and WebDriver.</li><li><a href="https://github.com/vdemedes/trevor" target="_blank" rel="noopener">trevor</a> - Run tests against multiple versions of Node.js without switching versions manually or pushing to Travis CI.</li><li><a href="https://github.com/alexfernandez/loadtest" target="_blank" rel="noopener">loadtest</a> - Run load tests for your web application, with an API for automation.</li><li><a href="https://github.com/gotwarlost/istanbul" target="_blank" rel="noopener">istanbul</a> - A code coverage tool that computes statement, line, function and branch coverage with module loader hooks to transparently add coverage when running tests.</li><li><a href="https://github.com/bcoe/nyc" target="_blank" rel="noopener">nyc</a> - Code coverage tool built on istanbul that works with subprocesses.</li><li><a href="https://github.com/sinonjs/sinon" target="_blank" rel="noopener">Sinon.JS</a> - Test spies, stubs and mocks.</li><li><a href="https://github.com/nodeca/navit" target="_blank" rel="noopener">navit</a> - PhantomJS / SlimerJS wrapper to simplify browser test scripting.</li><li><a href="https://github.com/pgte/nock" target="_blank" rel="noopener">nock</a> - HTTP mocking and expectations.</li><li><a href="https://github.com/theintern/intern" target="_blank" rel="noopener">intern</a> - A next-generation code testing stack for JavaScript.</li><li><a href="https://github.com/h2non/toxy" target="_blank" rel="noopener">toxy</a> - Hackable HTTP proxy to simulate failure scenarios and network conditions.</li><li><a href="https://github.com/sindresorhus/hook-std" target="_blank" rel="noopener">hook-std</a> - Hook and modify stdout/stderr.</li><li><a href="https://github.com/egoist/testen" target="_blank" rel="noopener">testen</a> - Run tests for multiple versions of Node.js locally with NVM.</li></ul><h3 id="Benchmarking"><a href="#Benchmarking" class="headerlink" title="Benchmarking"></a>Benchmarking</h3><ul><li><a href="http://benchmarkjs.com" target="_blank" rel="noopener">Benchmark.js</a> - A robust benchmarking library that works on nearly all JavaScript platforms, supports high-resolution timers, and returns statistically significant results.</li><li><a href="https://github.com/logicalparadox/matcha" target="_blank" rel="noopener">matcha</a> - A caffeine-driven, simplistic approach to benchmarking.</li></ul><h3 id="Minifiers"><a href="#Minifiers" class="headerlink" title="Minifiers"></a>Minifiers</h3><ul><li><a href="http://lisperator.net/uglifyjs/" target="_blank" rel="noopener">UglifyJS2</a> - JavaScript minifier.</li><li><a href="https://github.com/jakubpawlowicz/clean-css" target="_blank" rel="noopener">clean-css</a> - CSS minifier.</li><li><a href="https://github.com/Swaagie/minimize" target="_blank" rel="noopener">minimize</a> - HTML minifier.</li><li><a href="https://github.com/imagemin/imagemin" target="_blank" rel="noopener">imagemin</a> - Image minifier.</li></ul><h3 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h3><ul><li><a href="http://passportjs.org" target="_blank" rel="noopener">Passport</a> - Simple, unobtrusive authentication.</li><li><a href="https://github.com/bnoguchi/everyauth" target="_blank" rel="noopener">everyauth</a> - Authentication and authorization (password, Facebook, etc) for your Connect and Express apps.</li><li><a href="https://passwordless.net" target="_blank" rel="noopener">passwordless</a> - Token-based authentication middleware for Express allowing authentication without passwords.</li><li><a href="https://github.com/zemirco/lockit" target="_blank" rel="noopener">Lockit</a> - Full featured authentication solution for Express. Supports a variety of databases, predefined routes, email and two-factor authentication.</li><li><a href="https://github.com/simov/grant" target="_blank" rel="noopener">Grant</a> - OAuth middleware for Express, Koa, and Hapi.</li></ul><h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><ul><li><a href="https://github.com/andris9/Nodemailer" target="_blank" rel="noopener">Nodemailer</a> - The fastest way to handle email.</li><li><a href="https://github.com/eleith/emailjs" target="_blank" rel="noopener">emailjs</a> - Send text/HTML emails with attachments to any SMTP server.</li></ul><h3 id="Job-queues"><a href="#Job-queues" class="headerlink" title="Job queues"></a>Job queues</h3><ul><li><a href="https://github.com/Automattic/kue" target="_blank" rel="noopener">kue</a> - Priority job queue backed by Redis.</li><li><a href="https://github.com/OptimalBits/bull" target="_blank" rel="noopener">bull</a> - Persistent job and message queue.</li></ul><h3 id="Node-js-management"><a href="#Node-js-management" class="headerlink" title="Node.js management"></a>Node.js management</h3><ul><li><a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a> - Node.js version management.</li><li><a href="https://github.com/isaacs/nave" target="_blank" rel="noopener">nave</a> - Virtual Environments for Node.js.</li><li><a href="https://github.com/ekalinin/nodeenv" target="_blank" rel="noopener">nodeenv</a> - A Node.js virtual environment compatible to Python’s virtualenv.</li><li><a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener">nvm for Windows</a> - Version management for Windows.</li></ul><h3 id="Polyfills"><a href="#Polyfills" class="headerlink" title="Polyfills"></a>Polyfills</h3><ul><li>Node.js<ul><li><a href="https://github.com/sindresorhus/set-immediate-shim" target="_blank" rel="noopener">set-immediate-shim</a> - Simple <code>setImmediate()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/path-is-absolute" target="_blank" rel="noopener">path-is-absolute</a> - Node.js 0.12 <code>path.isAbsolute()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/os-tmpdir" target="_blank" rel="noopener">os-tmpdir</a> - Node.js <code>os.tmpdir()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/os-homedir" target="_blank" rel="noopener">os-homedir</a> - Node.js 4.0 <code>os.homedir()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/debug-log" target="_blank" rel="noopener">debug-log</a> - Node.js 0.12 <code>util.debuglog()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/buffer-equals" target="_blank" rel="noopener">buffer-equals</a> - Node.js 0.12 <code>buffer.equals()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/buffer-includes" target="_blank" rel="noopener">buffer-includes</a> - Node.js 5.3.0 <code>buffer.includes()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/buf-indexof" target="_blank" rel="noopener">buf-indexof</a> - Node.js 4.0 <code>buffer.indexOf()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/buf-compare" target="_blank" rel="noopener">buf-compare</a> - Node.js 0.12 <code>Buffer.compare()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/fs-access" target="_blank" rel="noopener">fs-access</a> - Node.js 0.12 <code>fs.access()</code> &amp; <code>fs.accessSync()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/exec-file-sync" target="_blank" rel="noopener">exec-file-sync</a> - Node.js 0.12 <code>childProcess.execFileSync()</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/child-process-ctor" target="_blank" rel="noopener">child-process-ctor</a> - Node.js 4.0 <code>childProcess.ChildProcess</code> ponyfill.</li><li><a href="https://github.com/sindresorhus/node-status-codes" target="_blank" rel="noopener">node-status-codes</a> - Node.js <code>http.STATUS_CODES</code> ponyfill.</li><li><a href="https://github.com/isaacs/exit-code" target="_blank" rel="noopener">exit-code</a> - Node.js 0.12 <code>process.exitCode</code> polyfill.</li><li><a href="https://github.com/sindresorhus/core-assert" target="_blank" rel="noopener">core-assert</a> - Node.js <code>assert</code> as a standalone module.</li><li><a href="https://github.com/sindresorhus/deep-strict-equal" target="_blank" rel="noopener">deep-strict-equal</a> - Test for deep equality - Node.js <code>assert.deepStrictEqual()</code> algorithm as a standalone module.</li></ul></li><li>JavaScript<ul><li><a href="https://github.com/sindresorhus/object-assign" target="_blank" rel="noopener">object-assign</a> - ES2015 <code>Object.assign()</code> ponyfill.</li><li><a href="https://github.com/floatdrop/pinkie-promise" target="_blank" rel="noopener">pinkie-promise</a> - ES2015 <code>Promise</code> ponyfill.</li><li><a href="https://github.com/tvcutsem/harmony-reflect" target="_blank" rel="noopener">harmony-reflect</a> - ES2015 <code>Reflect</code> and <code>Proxy</code> polyfill.</li><li><a href="https://github.com/paulmillr/es6-shim" target="_blank" rel="noopener">es6-shim</a> - Collection of ES2015 polyfills.</li><li>More ES2015 polyfills at <a href="https://github.com/addyosmani/es6-tools#polyfills" target="_blank" rel="noopener">es6-tools</a>.</li></ul></li></ul><h3 id="Natural-language-processing"><a href="#Natural-language-processing" class="headerlink" title="Natural language processing"></a>Natural language processing</h3><ul><li><a href="https://github.com/wooorm/retext" target="_blank" rel="noopener">retext</a> - An extensible natural language system.</li><li><a href="https://github.com/wooorm/franc" target="_blank" rel="noopener">franc</a> - Detect the language of text.</li><li><a href="https://github.com/sindresorhus/leven" target="_blank" rel="noopener">leven</a> - Measure the difference between two strings using the Levenshtein distance algorithm.</li><li><a href="https://github.com/NaturalNode/natural" target="_blank" rel="noopener">natural</a> - A general natural language facility.</li></ul><h3 id="Process-management"><a href="#Process-management" class="headerlink" title="Process management"></a>Process management</h3><ul><li><a href="https://github.com/Unitech/pm2" target="_blank" rel="noopener">PM2</a> - Advanced Process Manager.</li><li><a href="https://github.com/coreybutler/node-windows" target="_blank" rel="noopener">node-windows</a> - Run scripts as a native Windows service and log to the Event viewer.</li><li><a href="https://github.com/coreybutler/node-mac" target="_blank" rel="noopener">node-mac</a> - Run scripts as a native Mac daemon and log to the console app.</li><li><a href="https://github.com/coreybutler/node-linux" target="_blank" rel="noopener">node-linux</a> - Run scripts as native system service and log to syslog.</li><li><a href="https://github.com/foreverjs/forever" target="_blank" rel="noopener">forever</a> - A simple CLI tool for ensuring that a given script runs continuously (i.e. forever).</li><li><a href="https://github.com/remy/nodemon" target="_blank" rel="noopener">nodemon</a> - Monitor for changes in your app and automatically restart the server.</li><li><a href="https://github.com/petruisfan/node-supervisor" target="_blank" rel="noopener">supervisor</a> - Restart scripts when they crash or restart when a <code>*.js</code> file changes.</li><li><a href="https://www.phusionpassenger.com/node_weekly" target="_blank" rel="noopener">Phusion Passenger</a> - Friendly process manager that integrates directly into Nginx.</li><li><a href="https://github.com/andrewrk/naught" target="_blank" rel="noopener">naught</a> - Process manager with zero downtime deployment.</li></ul><h3 id="Automation"><a href="#Automation" class="headerlink" title="Automation"></a>Automation</h3><ul><li><a href="https://github.com/octalmage/robotjs" target="_blank" rel="noopener">robotjs</a> -  Desktop Automation: control the mouse, keyboard and read the screen.</li></ul><h3 id="AST"><a href="#AST" class="headerlink" title="AST"></a>AST</h3><ul><li><a href="https://github.com/ternjs/acorn" target="_blank" rel="noopener">Acorn</a> - A tiny, fast JavaScript parser.</li><li><a href="https://github.com/millermedeiros/rocambole" target="_blank" rel="noopener">Rocambole</a> - Recursively walk and transform JavaScript AST.</li></ul><h3 id="Static-site-generators"><a href="#Static-site-generators" class="headerlink" title="Static site generators"></a>Static site generators</h3><ul><li><a href="http://www.metalsmith.io" target="_blank" rel="noopener">Metalsmith</a> - An extremely simple, pluggable static site generator.</li><li><a href="http://wintersmith.io" target="_blank" rel="noopener">Wintersmith</a> - Flexible, minimalistic, multi-platform static site generator.</li><li><a href="http://assemble.io" target="_blank" rel="noopener">Assemble</a> - Static site generator for Node.js, Grunt.js, and Yeoman.</li><li><a href="https://github.com/docpad/docpad" target="_blank" rel="noopener">DocPad</a> - Static site generator with dynamic abilities and huge plugin ecosystem.</li></ul><h3 id="Content-management-systems"><a href="#Content-management-systems" class="headerlink" title="Content management systems"></a>Content management systems</h3><ul><li><a href="http://keystonejs.com" target="_blank" rel="noopener">KeystoneJS</a> - CMS and web application platform built on Express and MongoDB.</li><li><a href="http://calip.so" target="_blank" rel="noopener">Calipso</a> - A simple content management system, built along similar themes to Drupal and Wordpress, that is designed to be fast, flexible and simple.</li><li><a href="http://apostrophenow.org" target="_blank" rel="noopener">Apostrophe2</a> - A content management system with an emphasis on intuitive front end content editing and administration built on Express and MongoDB.</li></ul><h3 id="Forum"><a href="#Forum" class="headerlink" title="Forum"></a>Forum</h3><ul><li><a href="https://nodebb.org" target="_blank" rel="noopener">nodeBB</a> - A better forum platform for the modern web.</li></ul><h3 id="Blogging"><a href="#Blogging" class="headerlink" title="Blogging"></a>Blogging</h3><ul><li><a href="https://ghost.org" target="_blank" rel="noopener">ghost</a> - Simple, powerful publishing platform that allows you to share your story with the world.</li><li><a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> - Fast, simple and powerful blogging framework.</li></ul><h3 id="Weird"><a href="#Weird" class="headerlink" title="Weird"></a>Weird</h3><ul><li><a href="https://github.com/sindresorhus/superb" target="_blank" rel="noopener">superb</a> - Get superb like words.</li><li><a href="https://github.com/sindresorhus/cat-names" target="_blank" rel="noopener">cat-names</a> - Get popular cat names.</li><li><a href="https://github.com/sindresorhus/dog-names" target="_blank" rel="noopener">dog-names</a> - Get popular dog names.</li><li><a href="https://github.com/sindresorhus/superheroes" target="_blank" rel="noopener">superheroes</a> - Get superhero names.</li><li><a href="https://github.com/sindresorhus/supervillains" target="_blank" rel="noopener">supervillains</a> - Get supervillain names.</li><li><a href="https://github.com/maxogden/cool-ascii-faces" target="_blank" rel="noopener">cool-ascii-faces</a> - Get some cool ascii faces.</li><li><a href="https://github.com/melaniecebula/cat-ascii-faces" target="_blank" rel="noopener">cat-ascii-faces</a> - ₍˄·͈༝·͈˄₎◞ ̑̑ෆ⃛ (=ↀωↀ=)✧ (^･o･^)ﾉ”</li><li><a href="https://github.com/sindresorhus/cows" target="_blank" rel="noopener">cows</a> - ASCII cows.</li></ul><h3 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h3><ul><li><a href="https://github.com/sindresorhus/execa" target="_blank" rel="noopener">execa</a> - A better <code>child_process</code>.</li><li><a href="https://github.com/cheeriojs/cheerio" target="_blank" rel="noopener">cheerio</a> - Fast, flexible, and lean implementation of core jQuery designed specifically for the server.</li><li><a href="https://github.com/atom/electron" target="_blank" rel="noopener">Electron</a> - Build cross platform desktop apps with web technologies. <em>(You might like <a href="https://github.com/sindresorhus/awesome-electron" target="_blank" rel="noopener">awesome-electron</a>)</em></li><li><a href="https://github.com/sindresorhus/opn" target="_blank" rel="noopener">opn</a> - Opens stuff like websites, files, executables.</li><li><a href="https://github.com/sindresorhus/hasha" target="_blank" rel="noopener">hasha</a> - Hashing made simple. Get the hash of a buffer/string/stream/file.</li><li><a href="https://github.com/sindresorhus/dot-prop" target="_blank" rel="noopener">dot-prop</a> - Get a property from a nested object using a dot path.</li><li><a href="https://github.com/sindresorhus/onetime" target="_blank" rel="noopener">onetime</a> - Only run a function once.</li><li><a href="https://github.com/sindresorhus/mem" target="_blank" rel="noopener">mem</a> - Memoize functions - an optimization technique used to speed up consecutive function calls by caching the result of calls with identical input.</li><li><a href="https://github.com/sindresorhus/require-uncached" target="_blank" rel="noopener">require-uncached</a> - Require a module bypassing the cache.</li><li><a href="https://github.com/yeoman/stringify-object" target="_blank" rel="noopener">stringify-object</a> - Stringify an object/array like JSON.stringify just without all the double-quotes.</li><li><a href="https://github.com/sindresorhus/strip-bom" target="_blank" rel="noopener">strip-bom</a> - Strip UTF-8 byte order mark (BOM) from a string/buffer/stream.</li><li><a href="https://github.com/sindresorhus/deep-assign" target="_blank" rel="noopener">deep-assign</a> - Recursive <code>Object.assign()</code>.</li><li><a href="https://github.com/sindresorhus/os-locale" target="_blank" rel="noopener">os-locale</a> - Get the system locale.</li><li><a href="https://github.com/nodejs/nan" target="_blank" rel="noopener">nan</a> - A header file filled with macro and utility goodness for making add-on development for across Node.js versions easier.</li><li><a href="https://github.com/sindresorhus/multiline" target="_blank" rel="noopener">multiline</a> - Multiline strings in JavaScript.</li><li><a href="https://github.com/mscdex/ssh2" target="_blank" rel="noopener">ssh2</a> - An SSH2 client and server module.</li><li><a href="https://github.com/markelog/adit" target="_blank" rel="noopener">adit</a> - SSH tunneling made simple.</li><li><a href="https://github.com/sindresorhus/lazy-req" target="_blank" rel="noopener">lazy-req</a> - Require modules lazily.</li><li><a href="https://github.com/sindresorhus/file-type" target="_blank" rel="noopener">file-type</a> - Detect the file type of a Buffer.</li><li><a href="https://github.com/SGrondin/bottleneck" target="_blank" rel="noopener">Bottleneck</a> - A powerful rate limiter that makes throttling easy.</li><li><a href="https://github.com/audreyt/node-webworker-threads" target="_blank" rel="noopener">webworker-threads</a> - Lightweight Web Worker API implementation with native threads.</li><li><a href="https://github.com/mapbox/node-pre-gyp" target="_blank" rel="noopener">node-pre-gyp</a> - Makes it easy to publish and install Node.js C++ addons from binaries.</li><li><a href="https://github.com/peterbraden/node-opencv" target="_blank" rel="noopener">opencv</a> - Bindings for OpenCV. The defacto computer vision library.</li><li><a href="https://github.com/shutterstock/node-common-errors" target="_blank" rel="noopener">common-errors</a> - Common error classes and utility functions.</li><li><a href="https://github.com/rschmukler/agenda" target="_blank" rel="noopener">agenda</a> - Lightweight job scheduling on MongoDB.</li><li><a href="https://github.com/motdotla/dotenv" target="_blank" rel="noopener">dotenv</a> - Load environment variables from .env file.</li><li><a href="https://github.com/sindresorhus/remote-git-tags" target="_blank" rel="noopener">remote-git-tags</a> - Get tags from a remote git repo.</li><li><a href="https://github.com/npm/node-semver" target="_blank" rel="noopener">semver</a> - <a href="http://semver.org" target="_blank" rel="noopener">semver</a> parser.</li><li><a href="https://github.com/h2non/nar" target="_blank" rel="noopener">nar</a> - Create self-contained executable binaries.</li><li><a href="https://github.com/eleme/bell.js" target="_blank" rel="noopener">node-bell</a> - Real-time anomalies detection for periodic time series.</li><li><a href="https://github.com/Marak/Faker.js" target="_blank" rel="noopener">Faker.js</a> - Generate massive amounts of fake data.</li><li><a href="https://github.com/nodegit/nodegit" target="_blank" rel="noopener">nodegit</a> - Native bindings to Git.</li><li><a href="https://github.com/pigulla/json-strictify" target="_blank" rel="noopener">json-strictify</a> - Safely serialize a value to JSON without data loss or going into an infinite loop.</li><li><a href="https://github.com/sindresorhus/parent-module" target="_blank" rel="noopener">parent-module</a> - Get the path of the parent module.</li><li><a href="https://github.com/sindresorhus/resolve-from" target="_blank" rel="noopener">resolve-from</a> - Resolve the path of a module like <code>require.resolve()</code> but from a given path.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Awesome-Node-js-中文版&quot;&gt;&lt;a href=&quot;#Awesome-Node-js-中文版&quot; class=&quot;headerlink&quot; title=&quot;Awesome Node.js 中文版&quot;&gt;&lt;/a&gt;Awesome Node.js 中文版&lt;/h1&gt;&lt;bloc
      
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>react Component</title>
    <link href="http://yoursite.com/2018/01/12/react/"/>
    <id>http://yoursite.com/2018/01/12/react/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-14T10:58:27.563Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://reactjs.org/docs/hello-world.html" target="_blank" rel="noopener">react官网</a><br><a href="http://reacttraining.cn/web/example/auth-workflow" target="_blank" rel="noopener">react-router-dom</a><br><a href="https://redux.js.org/introduction/core-concepts" target="_blank" rel="noopener">redux</a><br><a href="http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html" target="_blank" rel="noopener">阮一峰redux</a></p><h3 id="组件的声明方式"><a href="#组件的声明方式" class="headerlink" title="组件的声明方式"></a>组件的声明方式</h3><ul><li>函数式定义 <code>无状态组件</code></li><li>es5原生方式  <code>React.createClass</code></li><li>es6形式的  `extends React.Component</li></ul><h4 id="无状态组建"><a href="#无状态组建" class="headerlink" title="无状态组建"></a><a href="https://reactjs.org/blog/2015/10/07/react-v0.14.html#stateless-functional-components" target="_blank" rel="noopener">无状态组建</a></h4><p><code>在react项目中，大多数组件被写成无状态的组件，通过简单组合可以构建成其他的组件</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const Home = (data) =&gt; (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;喜欢&#123;data.name&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">export</span> default Home;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ 组件不会被实例化，整体渲染性能得到提升</span><br><span class="line">因为组件被精简成一个render方法的函数来实现的，由于是无状态组件，所以无状态组件就不会在有组件实例化的过程，无实例化过程也就不需要分配多余的内存，从而性能得到一定的提升。</span><br><span class="line">$ 组件不能访问this对象</span><br><span class="line">无状态组件由于没有实例化过程，所以无法访问组件this中的对象，例如：this.ref、this.state等均不能访问。若想访问就不能使用这种形式来创建组件</span><br><span class="line">$ 组件无法访问生命周期的方法</span><br><span class="line">因为无状态组件是不需要组件生命周期管理和状态管理，所以底层实现这种形式的组件时是不会实现组件的生命周期方法。所以无状态组件是不能参与组件的各个生命周期管理的。</span><br><span class="line">$ 无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用</span><br></pre></td></tr></table></figure><p>无状态组件被鼓励在大型项目中尽可能以简单的写法来分割原本庞大的组件，未来React也会这种面向无状态组件在譬如无意义的检查和内存分配领域进行一系列优化，所以<code>只要有可能，尽量使用无状态组件</code>。</p><h4 id="React-createClass"><a href="#React-createClass" class="headerlink" title="React.createClass"></a>React.createClass</h4><ul><li>React.createClass会自绑定函数方法（不像React.Component只绑定需要关心的函数）导致不必要的性能开销，增加代码过时的可能性。</li><li>React.createClass的mixins不够自然、直观；React.Component形式非常适合高阶组件（Higher Order Components–HOC）,它以更直观的形式展示了比mixins更强大的功能，并且HOC是纯净的JavaScript，不用担心他们会被废弃。HOC可以参考无状态组件(Stateless Component) 与高阶组件。</li></ul><h4 id="React-Component"><a href="#React-Component" class="headerlink" title="React.Component"></a>React.Component</h4><p>函数需手动绑定(箭头函数不需要)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/hello-world.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;react官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://reacttraining.cn/web/ex
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>week</title>
    <link href="http://yoursite.com/2018/01/12/week/"/>
    <id>http://yoursite.com/2018/01/12/week/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.299Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://weex.incubator.apache.org/cn/guide/index.html" target="_blank" rel="noopener">week</a></p><p><code>Write Once, Run Anywhere</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://weex.incubator.apache.org/cn/guide/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;week&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Write Once, Run Anywh
      
    
    </summary>
    
    
      <category term="week" scheme="http://yoursite.com/tags/week/"/>
    
  </entry>
  
  <entry>
    <title>sass</title>
    <link href="http://yoursite.com/2018/01/12/sass/"/>
    <id>http://yoursite.com/2018/01/12/sass/</id>
    <published>2018-01-12T08:56:37.000Z</published>
    <updated>2018-03-09T01:07:31.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sass简介"><a href="#Sass简介" class="headerlink" title="Sass简介"></a>Sass简介</h2><p>Sass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行编码工作。</p><p>除了sass还有一些其他常见的预处理语言</p><ul><li>LESS</li><li>Stylus<br>Sass 有时候也被称为 SCSS,两者之间不同之处有以下两点：</li></ul><p>文件扩展名不同，Sass 是以“.sass”后缀为扩展名，而 SCSS 是以“.scss”后缀为扩展名<br>语法书写方式不同，Sass 是以严格的缩进式语法规则来书写，不带大括号({})和分号(;)，而 SCSS 的语法书写和我们的 CSS 语法书写方式非常类似。<br>来看一个示例：</p><p>/<em> Sass 语法 </em>/<br>$font-stack: Helvetica, sans-serif<br>$primary-color: #333<br>body<br>  font: 100% $font-stack<br>  color: $primary-color<br>/<em> Scss 语法 </em>/<br>$font-stack: Helvetica, sans-serif;<br>$primary-color: #333;<br>body {<br>  font: 100% $font-stack;<br>  color: $primary-color;<br>}<br>编译出来的 CSS</p><p>body {<br>  font: 100% Helvetica, sans-serif;<br>  color: #333;<br>}<br>scss文件中可以完全像写正常的css那样去写.</p><ol><li>sass安装<br>npm install -g node-sass<br>node-sass -w xxx.scss xxx.css –output-style expanded<br>node-sass 参数:</li></ol><p>-w, –watch                Watch a directory or file<br>-r, –recursive            Recursively watch directories or files<br>-o, –output               Output directory<br>-x, –omit-source-map-url  Omit source map URL comment from output<br>-i, –indented-syntax      Treat data from stdin as sass code (versus scss)<br>-q, –quiet                Suppress log output except on error<br>-v, –version              Prints version info<br>–output-style             CSS output style (nested | expanded | compact | compressed)<br>–indent-type              Indent type for output CSS (space | tab)<br>–indent-width             Indent width; number of spaces or tabs (maximum value: 10)<br>–linefeed                 Linefeed style (cr | crlf | lf | lfcr)<br>–source-comments          Include debug info in output<br>–source-map               Emit source map<br>–source-map-contents      Embed include contents in map<br>–source-map-embed         Embed sourceMappingUrl as data URI<br>–source-map-root          Base path, will be emitted in source-map as is<br>–include-path             Path to look for imported files<br>–follow                   Follow symlinked directories<br>–precision                The amount of precision allowed in decimal numbers<br>–importer                 Path to .js file containing custom importer<br>–functions                Path to .js file containing custom functions<br>–help                     Print usage info</p><ol><li>Sass的基本特性<br>变量<br>$brand-primary : darken(#428bca, 6.5%) !default;<br>$btn-primary-color : #fff !default;<br>$btn-primary-bg : $brand-primary !default;<br>$btn-primary-border : darken($btn-primary-bg, 5%) !default;<br>.btn-primary {<br>background-color: $btn-primary-bg;<br>color: $btn-primary-color;<br>border: 1px solid $btn-primary-border;<br>}<br>$baseLineHeight: 2;<br>$baseLineHeight: 1.5 !default;<br>body{<br> line-height: $baseLineHeight;<br>}<br>/<em> 局部变量 </em>/<br>$color: orange !default;<br>.block {<br>color: $color;<br>}<br>em {<br>$color: red;<br>a {<br> color: $color;<br>}<br>}<br>span {<br>color: $color;<br>}<br>嵌套<br>nav {<br>a {<br> color: red;<br> header &amp; {<br>   color:green;<br> }<br>}<br>}</li></ol><p>.box {<br>  border: {<br>   top: 1px solid red;<br>   bottom: 1px solid green;<br>  }<br>}</p><p>.clearfix{<br>  &amp;:before,<br>  &amp;:after {<br>    content:””;<br>    display: table;<br>  }<br>  &amp;:after {<br>    clear:both;<br>    overflow: hidden;<br>  }<br>}<br>不要无节制嵌套,一切都根据实际情况判断</p><p>混合宏</p><p>@mixin border-radius{<br>  -webkit-border-radius: 5px;<br>  border-radius: 5px;<br>}<br>button{<br>  @include border-radius;<br>}<br>@mixin border-radius($radius:5px){<br>  -webkit-border-radius: $radius;<br>  border-radius: $radius;<br>}<br>.nav{<br>  @include border-radius;<br>}<br>.box{<br>  @include border-radius(3px);<br>}<br>@mixin center($width,$height){<br>  width: $width;<br>  height: $height;<br>  position: absolute;<br>  top: 50%;<br>  left: 50%;<br>  margin-top: -($height) / 2;<br>  margin-left: -($width) / 2;<br>}<br>.box-center {<br>  @include center(500px,300px);<br>}<br>@mixin box-shadow($shadows…){<br>  @if length($shadows) &gt;= 1 {<br>    -webkit-box-shadow: $shadows;<br>    box-shadow: $shadows;<br>  } @else {<br>    $shadows: 0 0 2px rgba(#000,.25);<br>    -webkit-box-shadow: $shadow;<br>    box-shadow: $shadow;<br>  }<br>}<br>.box {<br>  @include box-shadow(0 0 1px rgba(#000,.5),0 0 2px rgba(#000,.2));<br>}<br>混合宏会生成冗余代码</p><p>扩展/继承<br>.btn {<br>  border: 1px solid #ccc;<br>  padding: 6px 10px;<br>  font-size: 14px;<br>}</p><p>.btn-primary {<br>  background-color: #f36;<br>  color: #fff;<br>  @extend .btn;<br>}</p><p>.btn-second {<br>  background-color: orange;<br>  color: #fff;<br>  @extend .btn;<br>}<br>不会生成冗余代码</p><p>占位符<br>%mt5 {<br>  margin-top: 5px;<br>}<br>%pt5{<br>  padding-top: 5px;<br>}<br>.btn {<br>  @extend %mt5;<br>  @extend %pt5;<br>}<br>mt5 和 pt5 并不会生成最终代码</p><p>插值#{}<br>允许在#{}内部解析变量</p><p>$properties: (margin, padding);<br>@mixin set-value($side, $value) {<br>  @each $prop in $properties {</p><pre><code>#{$prop}-#{$side}: $value;</code></pre><p>  }<br>}<br>.login-box {<br>  @include set-value(top, 14px);<br>}<br>注释<br>类似 CSS 的注释方式，使用 ”/<em> ”开头，结属使用 ”</em>/ ”<br>类似 JavaScript 的注释方式，使用“//”<br>两者区别，前者会在编译出来的 CSS 显示，后者在编译出来的 CSS 中不会显示</p><p>数据类型<br>Sass 和 JavaScript 语言类似，也具有自己的数据类型，在 Sass 中包含以下几种数据类型：</p><p>数字: 如，1、 2、 13、 10px；<br>字符串：有引号字符串或无引号字符串，如，”foo” ‘bar’ baz；<br>颜色：如，blue, #04a3f9, rgba(255,0,0,0.5);<br>布尔型：如，true, false；<br>空值：如，null；<br>值列表：用空格或者逗号分开，如，1.5em 1em 0 2em , Helvetica, Arial, sans-serif<br>运算<br>.box {<br>  width: 20px + 8in;<br>}<br>$full-width: 960px;<br>$sidebar-width: 200px;<br>.content {<br>  width: $full-width -  $sidebar-width;<br>}<br>.box {<br>  width: 10px <em> 2;<br>}<br>.box {<br>  width: (100px / 2);<br>}<br>p {<br>  font: 10px/8px;             // 纯 CSS，不是除法运算<br>  $width: 1000px;<br>  width: $width/2;            // 使用了变量，是除法运算<br>  width: round(1.5)/2;        // 使用了函数，是除法运算<br>  height: (500px/2);          // 使用了圆括号，是除法运算<br>  margin-left: 5px + 8px/2px; // 使用了加（+）号，是除法运算<br>}<br>.box {<br>  width: ((220px + 720px) - 11 </em> 20 ) / 12 ;<br>}<br>p {<br>  color: #010203 + #040506;<br>  background-color: #010203 * 2;<br>}</p><p>$content: “Hello” + “” + “Sass!”;<br>.box:before {<br>  content: “ #{$content} “;<br>}</p><ol><li>Sass高级特性<br>@if<br>@mixin blockOrHidden($boolean:true) {<br>@if $boolean {<br> display: block;<br>}<br>@else {<br> display: none;<br>}<br>}<br>.block {<br>@include blockOrHidden;<br>}<br>.hidden{<br>@include blockOrHidden(false);<br>}<br>@for<br>@for $i from <start> through <end><br>@for $i from <start> to <end><br>@for $i from 1 through 3 {<br>.item-#{$i} { width: 2em <em> $i; }<br>}<br>@for $i from 1 to 3 {<br>.item-#{$i} { width: 2em </em> $i; }<br>}<br>$grid-prefix: span !default;<br>$grid-width: 60px !default;<br>$grid-gutter: 20px !default;</end></start></end></start></li></ol><p>%grid {<br>  float: left;<br>  margin-left: $grid-gutter / 2;<br>  margin-right: $grid-gutter / 2;<br>}<br>@for $i from 1 through 12 {<br>  .#{$grid-prefix}#{$i}{<br>    width: $grid-width <em> $i + $grid-gutter </em> ($i - 1);<br>    @extend %grid;<br>  }<br>}<br>@each<br>$list: adam john wynn mason kuroir; //$list 就是一个列表<br>@mixin author-images {<br>    @each $author in $list {<br>        .photo-#{$author} {<br>            background: url(“/images/avatars/#{$author}.png”) no-repeat;<br>        }<br>    }<br>}<br>.author-bio {<br>    @include author-images;<br>}</p><ol><li>Sass中的函数<br>@function double($n) {<br>@return $n * 2;<br>}<br>#sidebar {<br>width: double(5px);<br>}<br>全部的内置函数</li></ol><p>字符串函数<br>unquote<br>quote<br>To-upper-case<br>To-lower-case<br>percentage<br>.footer{<br>  width : percentage(.2)<br>}<br>round<br>ceil<br>floor<br>abs<br>min<br>max<br>random<br>列表函数</p><p>length 取列表数据的长度<br>nth (10px 20px 30px, 1)<br>join join(10px 20px, 30px 40px)<br>append append(10px 20px ,30px)<br>zip zip(1px 2px 3px,solid dashed dotted,green blue red)<br>index index(1px solid red, solid)<br>type-of type-of(100)<br>unit 取单位<br>unitless 判断一个值是否带有单位<br>comparable 判断两个数是否可以进行加减合并<br>if(true,1px,2px)<br>Maps 函数<br>map-get<br>map-has-key<br>map-keys<br>map-values<br>map-merge<br>map-remove<br>keywords<br>$map: (<br>  $key1: value1,<br>  $key2: value2,<br>  $key3: value3<br>)</p><p>$map: (<br>  key1: value1,<br>  key2: (<br>    key-1: value-1,<br>    key-2: value-2,<br>  ),<br>key3: value3<br>);</p><p>$theme-color: (<br>  default: (<br>      bgcolor: #fff,<br>      text-color: #444,<br>      link-color: #39f<br>  ),<br>  primary:(<br>      bgcolor: #000,<br>      text-color:#fff,<br>      link-color: #93f<br>  ),<br>  negative: (<br>      bgcolor: #f36,<br>      text-color: #fefefe,<br>      link-color: #d4e<br>  )<br>);</p><p>/<em> map-get </em>/<br>$social-colors: (<br>  dribble: #ea4c89,<br>  facebook: #3b5998,<br>  github: #171515,<br>  google: #db4437,<br>  twitter: #55acee<br>);<br>.btn-dribble{<br>  color: map-get($social-colors,facebook);<br>}<br>/<em> 没有值不会报错 </em>/<br>.btn-weibo{<br>  font-size: 12px;<br>  color: map-get($social-colors,weibo);<br>}</p><p>/<em> map中的容错函数 </em>/<br>@function colors($color){<br>  @if not map-has-key($social-colors,$color){<br>      @warn “No color found for <code>#{$color}</code> in $social-colors map. Property omitted.”;<br>  }<br>  @return map-get($social-colors,$color);<br>}<br>.btn-dribble {<br>  color: colors(dribble);<br>}<br>/<em> each 遍历 map </em>/<br>@each $name in map-keys($social-colors){<br>  .btn-#{$name}{<br>      color: colors($name);<br>  }<br>}<br>@for $i from 1 through length(map-keys($social-colors)){<br>  .btn-#{nth(map-keys($social-colors),$i)} {<br>    color: colors(nth(map-keys($social-colors),$i));<br>  }<br>}</p><p>map-values($social-colors)<br>/<em>得到所有的值</em>/<br>$color: (<br>  text: #f36,<br>  link: #f63,<br>  border: #ddd,<br>  backround: #fff<br>);<br>$typo:(<br>  font-size: 12px,<br>  line-height: 1.6<br>);<br>$newcolor = map-merge($color, $typo);<br>/<em> 得到新值 </em>/<br>$map:map-remove($social-colors,dribble);<br>颜色函数<br>rgb<br>rgba<br>red<br>green<br>blue<br>mix 混合两种颜色 第三个参数为第一种颜色的比例 mix(blue,red,20%)</p><p>lighten lighten(red, 20%);<br>darken darken(red,30%);</p><p>saturate 改变颜色的饱和度 参数单位为百分比 saturate(blue,20%)<br>desaturate</p><p>adjust-hue 通过调整色相 adjust-hue(blue,30deg)</p><p>grayscale 直接让饱和度为0 grayscale(blue);<br>alpha 获取透明度<br>opacity 获取透明度<br>rgba<br>opacify 增加透明度<br>fade-in 增加透明度<br>transparentize 减少透明度<br>fade-out 减少透明度</p><p><ul class="swatches red"><br>  <li></li><br>  …<br>  <li></li><br></ul></p><p><ul class="swatches orange"><br>  <li></li><br>  …<br>  <li></li><br></ul></p><p><ul class="swatches yellow"><br>  <li></li><br>  …<br>  <li></li><br></ul></p><p><ul class="swatches green"><br>  <li></li><br>  …<br>  <li></li><br></ul></p><p><ul class="swatches blue"><br>  <li></li><br>  …<br>  <li></li><br></ul></p><p><ul class="swatches purple"><br>  <li></li><br>  …<br>  <li></li><br></ul><br>$redBase: #DC143C;<br>$orangeBase: saturate(lighten(adjust_hue($redBase, 39), 5), 7);//#f37a16<br>$yellowBase: saturate(lighten(adjust_hue($redBase, 64), 6), 13);//#fbdc14<br>$greenBase: desaturate(darken(adjust_hue($redBase, 102), 2), 11);//#73c620<br>$blueBase: saturate(darken(adjust_hue($redBase, 201), 2), 1);//#12b7d4<br>$purpleBase: saturate(darken(adjust_hue($redBase, 296), 2), 1);//#a012d4<br>$blackBase: #777;<br>$bgc: #fff;</p><p>//定义颜色变暗的 mixin<br>@mixin swatchesDarken($color) {<br>  @for $i from 1 through 10 {<br>    $x:$i+11;<br>    li:nth-child(#{$x}) {<br>      $n:$i<em>5;<br>      $bgc:darken($color,$n); //颜色变暗<br>      background-color: $bgc;<br>      &amp;:hover:before { //hover状态显示颜色编号<br>        content: “#{$bgc}”;<br>        color: lighten($bgc,40);<br>        font-family: verdana;<br>        font-size: 8px;<br>        padding: 2px;<br>      }<br>    }<br>  }<br>}<br>//定义颜色变亮的 mixin<br>@mixin swatchesLighten($color) {<br>  @for $i from 1 through 10 {<br>    $x:11-$i;<br>    li:nth-child(#{$x}) {<br>      $n:$i</em>5;<br>      $bgc:lighten($color,$n);<br>      background-color: $bgc;<br>      &amp;:hover:before {<br>        content: “#{$bgc}”;<br>        color: darken($bgc,40);<br>        font-family: verdana;<br>        font-size: 8px;<br>        padding: 2px;<br>      }<br>    }<br>  }<br>}</p><p>.swatches li {<br>  width: 4.7619047619%;<br>  float: left;<br>  height: 60px;<br>  list-style: none outside none;<br>}</p><p>ul.red {<br>  @include swatchesLighten($redBase);<br>  @include swatchesDarken($redBase);<br>  li:nth-child(11) {<br>    background-color: $redBase;<br>  }<br>}</p><p>ul.orange {<br>  @include swatchesLighten($orangeBase);<br>  @include swatchesDarken($orangeBase);<br>  li:nth-child(11) {<br>    background-color: $orangeBase;<br>  }<br>}</p><p>ul.yellow {<br>  @include swatchesLighten($yellowBase);<br>  @include swatchesDarken($yellowBase);<br>  li:nth-child(11) {<br>    background-color: $yellowBase;<br>  }<br>}</p><p>ul.green {<br>  @include swatchesLighten($greenBase);<br>  @include swatchesDarken($greenBase);<br>  li:nth-child(11) {<br>    background-color: $greenBase;<br>  }<br>}</p><p>ul.blue {<br>  @include swatchesLighten($blueBase);<br>  @include swatchesDarken($blueBase);<br>  li:nth-child(11) {<br>    background-color: $blueBase;<br>  }<br>}</p><p>ul.purple {<br>  @include swatchesLighten($purpleBase);<br>  @include swatchesDarken($purpleBase);<br>  li:nth-child(11) {<br>    background-color: $purpleBase;<br>  }<br>}</p><p>ul.black {<br>  @include swatchesLighten($blackBase);<br>  @include swatchesDarken($blackBase);<br>  li:nth-child(11) {<br>    background-color: $blackBase;<br>  }<br>}</p><ol><li>Sass的@规则<br>@import</li></ol><p>@media</p><p>.sidebar {<br>  width: 300px;<br>  @media screen and (orientation: landscape) {<br>    width: 500px;<br>  }<br>}<br>@media screen {<br>  .sidebar {<br>    @media (orientation: landscape) {<br>      width: 500px;<br>    }<br>  }<br>}</p><p>$media: screen;<br>$feature: -webkit-min-device-pixel-ratio;<br>$value: 1.5;</p><p>@media #{$media} and ($feature: $value) {<br>  .sidebar {<br>    width: 500px;<br>  }<br>}<br>@extend</p><p>@at-root</p><p>@debug</p><p>@warn</p><p>@error</p><p>@content</p><p>$small : 750px;<br>@mixin  onsmall {<br>  @media  only screen and (max-width: $small){<br>    @content;<br>  }<br>}</p><p>.navbar-content{<br>  max-width:980px;<br>  @include onsmall {<br>    min-width:320px;<br>  }<br>}<br>@mixin useRem($size){<br>  $device-list : 320px, 375px , 414px;<br>  html{<br>    @each $device in $device-list{<br>      @media screen and (min-width: $device){<br>        font-size: 100px * ($device/$size);<br>      }<br>    }<br>  }<br>}<br>@include useRem(750px);</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Sass简介&quot;&gt;&lt;a href=&quot;#Sass简介&quot; class=&quot;headerlink&quot; title=&quot;Sass简介&quot;&gt;&lt;/a&gt;Sass简介&lt;/h2&gt;&lt;p&gt;Sass 是一种css预处理器,CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
</feed>
